@model DTO.Recipient.RecipientViewModel

@inject Services.Residue.ResiduePriceServices residuePriceServices
@inject Services.Residue.ResidueFamilyServices residueFamilyServices
@inject Services.Residue.UnitOfMeasurementServices unitOfMeasurementServices

@{
    var residuePrices = await residuePriceServices.GetViewModelAsNoTrackingAsync(x => x.RecipientId == Model.RecipientId);
}
<div style="width: 655px; margin: auto; border: 1px solid #cecece; -webkit-box-shadow: -1px -5px 20px 0px #b5b5b5; box-shadow: -1px -5px 20px 0px #b5b5b5; background: linear-gradient(to bottom, #e2e2e2, #e2e2e2 70px, #01a89c52 250px, #05a09785);">
    <div style="padding: 15px; font-weight: bold; font-size: 25px; text-align: center;">
        <div style="margin-top: 1em;">
            - Novo Destinador -<br />
        </div>
    </div>
    <div style="padding: 15px; font-size: 16px; line-height: 25px; padding-bottom: 40px;">
        <div style="width: 80%; margin-left: 10%; padding: 10px; background: white; border-radius: 7px; box-shadow: inset 0px 0px 7px 2px #d0d0d0; -webkit-box-shadow: inset 0px 0px 7px 2px #d0d0d0; margin-bottom: 1em;">
            <p style="margin-bottom: .1em;">O destinador <b>@Model.Name</b>, está cadastrado e ativo para recepção de resíduos das famílias:.</p>
            <ul>
                @foreach (var item in residuePrices)
                {
                    var residueFamily = await residueFamilyServices.GetDataByIdAsync(item.ResidueFamilyId.Value);
                    var unitOfMeasurement = await unitOfMeasurementServices.GetDataByIdAsync(item.UnitOfMeasurementId);

                    <li><b>@residueFamily.Name - R$ @item._Price (@unitOfMeasurement.Name);</b></li>
                }
                @if (residuePrices.Count == 0)
                {
                    <li><b>Nenhum Preço Inserido.</b></li>
                }
            </ul>
        </div>
    </div>
</div>