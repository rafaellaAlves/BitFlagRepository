@model DTO.Shared.EntityViewMode<DTO.Demand.DemandClientResidueSelectionParameters>

@inject Services.Residue.ResidueFamilyServices residueFamilyServices
@inject Services.Residue.ResidueServices residueServices
@inject Services.Residue.UnitOfMeasurementServices unitOfMeasurementServices
@inject Web.Helpers.DropDownListHelper dropDownListHelper

<style type="text/css">
    @@media (min-width: 1100px) {
        #demand-client-residue-modal .modal-lg {
            max-width: 1000px;
        }
    }
</style>

<form id="demand-client-selection-area">
    <div class="row">
        <input type="hidden" value="@Model.Model.DemandClientResidue.DemandClientResidueId" name="DemandClientResidueId" />
        <div class="col-md col-12 form-group">
            <select class="form-control required" name="ResidueFamilyId">
                <option value="">Familía de Residuo</option>
                @foreach (var item in await residueFamilyServices.GetDataAsNoTrackingAsync(x => Model.Model.ResidueFamilyIds.Contains(x.ResidueFamilyId)))
                {
                    @(Html.Raw($"<option {(item.ResidueFamilyId == Model.Model.DemandClientResidue.ResidueFamilyId ?"selected" : "")} data-name=\"{item.Name}\" value=\"{item.ResidueFamilyId}\">{item.Name}</option>"))
                }
            </select>
        </div>
        <div class="col-md col-12 form-group">
            <select class="form-control required" name="ResidueId">
                <option value="" data-no-remove="true">Resíduo</option>
                @if (Model.Model.DemandClientResidue.ResidueFamilyId.HasValue)
                {
                    foreach (var item in await residueServices.GetDataAsNoTrackingAsync(x => Model.Model.DemandClientResidue.ResidueFamilyId == x.ResidueFamilyId))
                    {
                        @(Html.Raw($"<option {(item.ResidueId == Model.Model.DemandClientResidue.ResidueId ? "selected" : "")} data-ibama=\"{item.IBAMACode}\" data-name=\"{item.Name}\" value=\"{item.ResidueId}\">{item.Name}</option>"))
                    }
                }
            </select>
        </div>
        <div class="col-md-auto col-12 form-group">
            <div class="input-group" id="client-residue-weight-area">
                <input class="form-control required" placeholder="Quantidade (Peso)" name="Weight" value="@Model.Model.DemandClientResidue._Weight" />
                <div class="input-group-append">
                    <select class="form-control w-100" onchange="loadPriceVariation();" name="UnitOfMeasurementId">
                        @foreach (var item in (await unitOfMeasurementServices.GetDataAsNoTrackingAsync()).OrderBy(x => x.Order))
                        {
                            if (Model.Model.DemandClientResidue.UnitOfMeasurementId == item.UnitOfMeasurementId)
                            {
                                <option selected data-name="@item.Name" value="@item.UnitOfMeasurementId">@item.Initials</option>
                                continue;
                            }
                            <option data-name="@item.Name" value="@item.UnitOfMeasurementId">@item.Initials</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col-md-auto col-12">
            <button type="button" class="btn btn-primary w-100" id="demand-client-selection-add-button" onclick="@(!Model.Model.DemandClientResidue.ResidueFamilyId.HasValue? "insertResidueInSelectionTable()" : "saveEditionResidue()")"><i class="simple-icon-plus"></i>&nbsp;@(!Model.Model.DemandClientResidue.ResidueFamilyId.HasValue? "Adicionar" : "Salvar")</button>
        </div>
    </div>
    @if (!Model.Model.DemandClientResidue.ResidueFamilyId.HasValue)
    {
        <div id="demand-client-selection-table-area">
            <hr />
            <div class="row">
                <div class="col form-group table-responsive">
                    <table class="table table-striped table-condensed table-bordered" id="demand-client-residue-selection-table">
                        <thead>
                            <tr>
                                <td>Código IBAMA</td>
                                <td>Nome do Resíduo</td>
                                <td>Quantidade (Peso)</td>
                                <td>Familía do Resíduo</td>
                                <td>&nbsp;</td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</form>
<script type="text/javascript" asp-cut-key="demand-client-selection" asp-cut-key-load-from-controller="@Model.LoadFromController">
    var demandClientResidueSelectionTable, newDemandClientResidue = [];

    $('#demand-client-selection-area [name="ResidueFamilyId"]').change(function () {
        $('#demand-client-selection-area [name="ResidueId"] option:not([data-no-remove="true"])').remove();

        $.post('@Url.Action("GetDataByFamilyId", "Residues")', { residueFamilyId: $(this).val() }, function (d) {
            $.each(d, function (i, e) {
                var opt = new Option(e.name, e.residueId, false, false);
                $(opt).attr('data-name', e.name);
                $(opt).attr('data-ibama', e.ibamaCode);

                $('#demand-client-selection-area [name="ResidueId"]').append(opt);
            });
        });
    });

    $(document).ready(function () {
        demandClientResidueSelectionTable = $('#demand-client-residue-selection-table').DataTable({
            serverSide: false,
            proccessing: true,
            searching: true,
            lengthChange: false,
            dom: 'tip',
            scrollY: '250px',
            scrollCollapse: true,
            paging: false,
            drawCallback: function () {
                $('#demand-client-residue-selection-table').DataTable().columns.adjust();
            }
        });

        InitializeFunctions();
    });

    function insertResidueInSelectionTable() {
        if (!validateInputs('demand-client-selection-area')) return;

        if (isNaN(Globalize.parseFloat(Globalize.format(isNull($('#demand-client-selection-area [name="Weight"]').val(), 0)))))
        {
            $('#client-residue-weight-area').after('<div class="text-danger">O valor do peso precisa ser númerico.</div>');
            return;
        }

        if (newDemandClientResidue.findIndex(x => x.residueId == $('#demand-client-selection-area [name="ResidueId"] option:selected').val()) != -1) {
            $('#demand-client-selection-area [name="ResidueId"]').after('<div class="text-danger">Este resíduo já foi selecionado.</div>');
            return;
        }

        if (typeof demandClientResidue == 'object' && demandClientResidue.findIndex(x => x.residueId == $('#demand-client-selection-area [name="ResidueId"] option:selected').val()) != -1) {
            $('#demand-client-selection-area [name="ResidueId"]').after('<div class="text-danger">Este resíduo já foi selecionado.</div>');
            return;
        }

        var residueOptData = $('#demand-client-selection-area [name="ResidueId"] option:selected').data();
        var familyOptData = $('#demand-client-selection-area [name="ResidueFamilyId"] option:selected').data();

        var index = getDemandClientResidueNewIndex();

        var r = demandClientResidueSelectionTable.row.add(
            $('<tr>').append(
                $('<td>').append(residueOptData['ibama']),
                $('<td>').append(residueOptData['name']),
                $('<td>').append($('#demand-client-selection-area [name="Weight"]').val()),
                $('<td>').append(familyOptData['name']),
                $('<td>').append('<div class="text-center"><a href="javascript:removeDemandClientResidueSelection(' + index + ')" class="badge badge-pill badge-danger"><i class="simple-icon-trash"></i> Remover</a></div>')
            )
        );

        $(r.node()).attr('data-index', index);
        demandClientResidueSelectionTable.draw(false);

        newDemandClientResidue.push(
        {
            index,
            residueFamilyId: $('#demand-client-selection-area [name="ResidueFamilyId"] option:selected').val(),
            residueId: $('#demand-client-selection-area [name="ResidueId"] option:selected').val(),
            ibama: residueOptData['ibama'],
            residueName: residueOptData['name'],
            residueFamilyName: familyOptData['name'],
            weight: $('#demand-client-selection-area [name="Weight"]').val(),
            unitOfMeasurementId: $('#demand-client-selection-area [name="UnitOfMeasurementId"]').val(),
            unitOfMeasurementName: $('#demand-client-selection-area [name="UnitOfMeasurementId"] option:selected').data('name')
        });

        $('#demand-client-selection-area [name="ResidueFamilyId"]').val($('#demand-client-selection-area [name="ResidueFamilyId"] option:first').val());
        $('#demand-client-selection-area [name="ResidueId"]').val($('#demand-client-selection-area [name="ResidueId"] option:first').val());
        $('#demand-client-selection-area [name="Weight"]').val('');
    }

    function removeDemandClientResidueSelection(index) {
        demandClientResidueSelectionTable.row($('#demand-client-residue-selection-table tbody tr[data-index="' + index + '"]')).remove();
        demandClientResidueSelectionTable.draw(false);

        var _index = newDemandClientResidue.findIndex(x => x.index == index);
        newDemandClientResidue.splice(_index, 1);
    }

    function getDemandClientResidueNewIndex() {
        var indexes = $('#demand-client-residue-selection-table tbody tr[data-index]').map(function (i, e) { return $(e).data('data-index') });
        if (indexes.length == 0) return 1;

        var index = 0;
        do {
            index++;
        } while (indexes.IndexOf(index) != -1);

        return index;
    }

    function getDemandClientResidue() {
        return newDemandClientResidue;
    }
    function saveEditionResidue() {
        if (typeof saveEditionResidueCallback != 'function') return;

        var residueOptData = $('#demand-client-selection-area [name="ResidueId"] option:selected').data();
        var familyOptData = $('#demand-client-selection-area [name="ResidueFamilyId"] option:selected').data();

        saveEditionResidueCallback({
            residueFamilyId: $('#demand-client-selection-area [name="ResidueFamilyId"]').val(),
            residueId: $('#demand-client-selection-area [name="ResidueId"] option:selected').val(),
            ibama: residueOptData['ibama'],
            residueName: residueOptData['name'],
            residueFamilyName: familyOptData['name'],
            weight: $('#demand-client-selection-area [name="Weight"]').val(),
            unitOfMeasurementId: $('#demand-client-selection-area [name="UnitOfMeasurementId"]').val(),
            unitOfMeasurementName: $('#demand-client-selection-area [name="UnitOfMeasurementId"] option:selected').data('name'),
            oldResidueId: '@Model.Model.DemandClientResidue.ResidueId'
        });
    }
</script>