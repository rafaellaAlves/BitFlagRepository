@{
    ViewData["Title"] = "Lista de Geradores";
}

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-8 form-group">
                <input type="text" class="form-control" placeholder="Pesquisar..." data-toggle="search-datatable" data-target="#client-table" />
            </div>
            <div class="col-md-2 form-group">
                <select class="form-control" name="ClientStatusId" onchange="clientDatatables.draw();">
                    <option value="">Status do Gerador</option>
                    <option value="1">Geradores</option>
                    <option value="2">Solicitações</option>
                </select>
            </div>
            <div class="col-md-2 form-group">
                <a href="@Url.Action("Manage", "Client")" class="btn btn-primary w-100"><i class="simple-icon-plus"></i>&nbsp;Novo</a>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-12">
                <div id="ClientIndexViewComponent">
                    @(await Component.InvokeAsync("ClientIndex"))
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script asp-paste-key="script-client-index"></script>

<script type="text/javascript">
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            if (settings.sInstance != "client-table") return true;

            var demandStatusID = $('[name="ClientStatusId"]').val();

            return isNullOrWhiteSpace(demandStatusID) || demandStatusID == $(settings.aoData[dataIndex].anCells[4]).find('[data-client-status-id]').data('client-status-id');
        }
    );
</script>
}