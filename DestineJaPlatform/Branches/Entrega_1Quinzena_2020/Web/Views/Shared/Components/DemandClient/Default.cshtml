@model DTO.Shared.EntityViewMode<DTO.Demand.DemandClientManageViewModel>
@inject Services.Route.RouteTypeServices routeTypeServices
@inject Services.Demand.DemandResidueFamilyServices demandResidueFamilyServices
@inject Services.Residue.ResidueFamilyServices residueFamilyServices
@inject Services.Contract.ContractPeriodicityServices contractPeriodicityServices

@{
    var isRouteContract = Model.Model.Route.RouteTypeId == (await routeTypeServices.GetDataByExternalCode("CONTRATO"))?.RouteTypeId;
    var isRouteService = Model.Model.Route.RouteTypeId == (await routeTypeServices.GetDataByExternalCode("SERVICO"))?.RouteTypeId;

    var perDemandStatus = await contractPeriodicityServices.GetDataByExternalCode("PORDEMANDA");

    var editable = !Model.Model.Demand.Closed && !Model.Model.Demand.Cancel;
}
<style type="text/css">
    .legend div {
        height: 30px;
        width: 30px;
        border: 1px solid #a1a1a1;
        display: inline-flex;
        border-radius: 5px;
    }

    .legend label {
        transform: translateY(-50%);
        font-weight: bold;
        margin-left: 10px;
    }

    .legend {
        padding-top: 32px;
        white-space: nowrap;
    }
</style>

<div class="row" id="demand-client-table-filter-area">
    <div class="col-md-2 form-group">
        <label>Filtrar por situação</label>
        <select class="form-control" name="SituationId" onchange="demandNotUsedClientTable.draw(); demandClientTable.draw();">
            <option value="">Selecione</option>
            <option value="1">Regular</option>
            <option value="2">Coleta Atrasada</option>
            <option value="3">Inadimplente</option>
        </select>
    </div>
</div>


<div class="row">
    <div class="col">
        <div class="table-responsive">
            <table class="table nowrap table-condensed table-bordered w-100 tablesizeline" id="demand-client-table">
                <thead>
                    <tr style="background: #a1a1a1; color: white;">
                        <th colspan="13" class="text-center">Geradores Selecionados para Coleta</th>
                    </tr>
                    <tr style="background: #a1a1a1; color: white;">
                        @if (editable)
                        {
                            <td></td>
                        }
                        <td style="text-align:center">Seq.</td>
                        <td style="text-align:center">Código</td>
                        <td style="text-align:center">Gerador</td>
                        <td style="text-align:center">Cidade</td>
                        <td style="text-align:center">Bairro</td>
                        <td style="text-align:center">Period</td>
                        <td style="text-align:center">Situação</td>
                        <td style="text-align:center">Últ. Visita</td>
                        <td style="text-align:center">Obs</td>
                        <td style="text-align:center">Últ. Coleta</td>
                        <td style="text-align:center">Obs</td>
                        @if (editable)
                        {
                            <td>&nbsp;</td>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Model.DemandClient.OrderBy(x => x.Order))
                    {
                        <tr data-address-id="@item.ClientCollectionAddressId" data-contract-id="@(isRouteContract? item.ContractId : (object)"")" data-service-id="@(isRouteService? item.ServiceId : (object)"")" data-demand-client-id="@item.DemandClientId" style="background-color: @item.RowColor">
                            @if (editable)
                            {
                                <td><i class="simple-icon-shuffle"></i></td>
                            }
                            <td class="text-center">@item.Order</td>
                            <td data-time-to-demand="@item.TimeToDemand" class="text-center"><a data-disabledAll="false" href="@Url.Action("Manage", "Client", new { id = item.ClientId})" target="_blank">@item.ClientId</a></td>
                            <td>@item.CompanyName</td>
                            <td>@item.City</td>
                            <td>@item.Neighborhood</td>
                            @if (isRouteContract)
                            {
                                <td data-filter="@item.PeriodicityId">@item.PeriodicityName</td>
                            }
                            else
                            {
                                <td data-filter="@perDemandStatus.ContractPeriodicityId">@perDemandStatus.Name</td>
                            }
                            <td data-filter="@item.SituationId">@item.SituationName</td>
                            <td>@item._LastVisitedDate.IfNullChange("-")</td>
                            <td>@(item.ClosedCollected.HasValue? (item.ClosedCollected.Value? $"Coletou MTR {item.ClosedDemandId}" : $"Não Coletou MRT {item.ClosedDemandId}") : "-")</td>
                            <td>@item._LastCollectedDate.IfNullChange("-")</td>
                            <td>@(item.ClosedCollected.HasValue? (item.ClosedCollected.Value? $"Coletou {item.ClosedTotalWeightCollected} Kg" : item.ClosedNonCollectingReason) : "-")</td>
                            @if (editable)
                            {
                                <td>
                                    <div class="text-center">
                                        @if (!item.Visited.HasValue)
                                        {
                                            <text>
                                                <a href="javascript:void(0)" onclick="openSelectResidueFamilyModal(@item.ClientCollectionAddressId,@(isRouteContract ? item.ContractId : (object)"null"), @(isRouteService ? item.ServiceId : (object)"null"), null, true)" title="Editar Família de Resíuos" class="badge badge-pill badge-primary"><i class="simple-icon-basket-loaded"></i></a>
                                                &nbsp;
                                            </text>
                                        }
                                        <a href="javascript:void(0)" onclick="removeClientAddress(@item.ClientCollectionAddressId);" title="Remover" class="badge badge-pill badge-danger"><i class="simple-icon-trash"></i></a>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@if (editable)
{
    <div class="row">
        <div class="col form-group text-right">
            <label class="w-100">&nbsp;</label>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#demand-client-modal">Incluir Gerador</button>
        </div>
    </div>
}
<div class="row mb-4" id="demand-not-used-client-more-info-link">
    <div class="col-md-12 text-center mt-1">
        <a href="javascript:void(0)" data-disabledAll="false" class="badge badge-info" onclick="$('#demand-not-used-client-more-info-link').hide(); $('#demand-not-used-client-area').show(); $('#demand-not-used-client-table').DataTable().columns.adjust();"><i class="simple-icon-arrow-down"></i>&nbsp;Visualizar Geradores não Selecionados</a>
    </div>
</div>
<div id="demand-not-used-client-area" style="display:none;">
    <hr />
    <div class="row">
        <div class="col">
            <div class="table-responsive">
                <table class="table nowrap table-condensed table-bordered w-100 " id="demand-not-used-client-table">
                    <thead>
                        <tr style="background: #a1a1a1; color: white;">
                            <th colspan="11" class="text-center">Geradores não Selecionados</th>
                        </tr>
                        <tr style="background: #a1a1a1; color: white;">
                            <td style="text-align:center">Código</td>
                            <td style="text-align:center">Gerador</td>
                            <td style="text-align:center">Cidade</td>
                            <td style="text-align:center">Bairro</td>
                            <td style="text-align:center">Period</td>
                            <td style="text-align:center">Situação</td>
                            <td style="text-align:center">Últ. Visita</td>
                            <td style="text-align:center">Obs</td>
                            <td style="text-align:center">Últ Coleta</td>
                            <td style="text-align:center">Obs</td>
                            @if (editable)
                            {
                                <td>&nbsp;</td>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Model.DemandNotUsedClient)
                        {
                            <tr data-address-id="@item.ClientCollectionAddressId" data-contract-id="@(isRouteContract? item.ContractId : (object)"")" data-service-id="@(isRouteService? item.ServiceId : (object)"")" style="background-color: @item.RowColor">
                                <td data-time-to-demand="@item.TimeToDemand" class="text-center"><a data-disabledAll="false" href="@Url.Action("Manage", "Client", new { id = item.ClientId})" target="_blank">@item.ClientId</a></td>
                                <td>@item.CompanyName</td>
                                <td>@item.City</td>
                                <td>@item.Neighborhood</td>
                                @if (isRouteContract)
                                {
                                    <td data-filter="@item.PeriodicityId">@item.PeriodicityName</td>
                                }
                                else
                                {
                                    <td data-filter="@perDemandStatus.ContractPeriodicityId">@perDemandStatus.Name</td>
                                }
                                <td data-filter="@item.SituationId">@item.SituationName</td>
                                <td>@item._LastVisitedDate.IfNullChange("-")</td>
                                <td>@(item.ClosedCollected.HasValue? (item.ClosedCollected.Value? $"Coletou MTR {item.ClosedDemandId}" : $"Não Coletou MRT {item.ClosedDemandId}") : "-")</td>
                                <td>@item._LastCollectedDate.IfNullChange("-")</td>
                                <td>@(item.ClosedCollected.HasValue? (item.ClosedCollected.Value? $"Coletou {item.ClosedTotalWeightCollected} Kg" : item.ClosedNonCollectingReason) : "-")</td>
                                @if (editable)
                                {
                                    <td>
                                        <div class="text-center">
                                            <a href="javascript:void(0)" onclick="_setAddressInDemand(@item.ClientCollectionAddressId);" class="badge badge-pill badge-success" title="Selecionar"><i class="simple-icon-plus"></i></a>&nbsp;
                                            <a href="javascript:_removeNotUsedClientAddress(@item.ClientCollectionAddressId)" class="badge badge-pill badge-danger" title="Remover"><i class="simple-icon-trash"></i></a>
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-12 text-center mb-5">
        <a href="javascript:void(0)" data-disabledAll="false" class="badge badge-info" onclick="$('#demand-not-used-client-more-info-link').show(); $('#demand-not-used-client-area').hide();"><i class="simple-icon-arrow-up"></i>&nbsp;Esconder Geradores não Selecionados</a>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-12">
        <div class="card card-body tx-mutted bd-0" style=" padding-bottom: 1px; padding-top: 7px;">
            <div class="row" style="padding: 5px;">
                <div class="col-2 legend" style="padding: 0;">
                    <b style="display: inline-flex; margin-bottom: 10px;">Legendas</b>
                    <br />
                    <div style="background: #8ccee6;"></div>
                    <label style="margin-left:0;">Coleta Atrasada</label>
                </div>
                <div class="col-2 legend">
                    <div style="background: #f0a1a1;"></div>
                    <label>Inadimplente</label>
                </div>
                <div class="col-2 legend">
                    <div style="background:white;"></div>
                    <label>Regular</label>
                </div>
            </div>
        </div><!-- card -->
    </div>
</div>
<script asp-cut-key-load-from-controller="@Model.LoadFromController" type="text/javascript" asp-cut-key="demand-client">
    var addressFamilyName = [@Html.Raw(Model.Model.GetJsonFamilyNames())], addressFamilyIds = [@Html.Raw(Model.Model.GetJsonFamilies())];
    $(document).ready(function () {
        if (typeof setFamilyNames == 'function') {
            setFamilyNames(addressFamilyName);
        }

        demandNotUsedClientTable = $('#demand-not-used-client-table').DataTable({
        serverSide: false,
            proccessing: true,
            searching: true,
            lengthChange: false,
            dom: 'tip',
            //scrollX: true,
            scrollY: '400px',
            scrollCollapse: true,
            paging: false,
            ordering: false
        });

        demandClientTable = $('#demand-client-table').DataTable({
            serverSide: false,
            proccessing: true,
            searching: true,
            lengthChange: false,
            dom: 'tip',
            //scrollX: true,
            scrollY: '400px',
            scrollCollapse: true,
            paging: false,
            ordering: false,
            columnDefs: [
                { orderable: true, className: 'text-center reorder', targets: 1 },
            ],
            @if (editable)
            {
            <text>
            rowReorder: { dataSrc: 1 },
            </text>
            }
            drawCallback: function () {
                $('#demand-manage-address-count').val($(this).DataTable().rows().count());

                //Atualza visualmente os numeros da coluna "Sequência"
                $('#demand-client-table').DataTable().rows({ order: 'applied' }).nodes().each(function (e, i) {
                    var td = $(e).find('td')[1];
                    if (td != null) td.innerHTML = i + 1;
                });

                setTimeout(function () {
                    $('#demand-client-table').DataTable().columns.adjust();
                    $('#demand-not-used-client-table').DataTable().columns.adjust();
                }, 1); //atualiza a largura das colunas
            }
        });

        if (typeof setFamilyNames == 'function') {
            setFamilyNames(addressFamilyName);
        }
    });

    function removeClientAddress(addressId) {
        bootboxConfirm('Deseja realmente retirar este Gerador da Coleta?', function (d) {
            if (!d) return;

			var serviceId = $('#demand-client-table tr[data-address-id="' + addressId + '"]').data('service-id')

			_setAddressInNotUsedClient(addressId, serviceId);

            demandClientTable.row($('#demand-client-table tr[data-address-id="' + addressId + '"]')).remove();
            demandClientTable.draw();

            $('#demand-client-table').DataTable().columns.adjust();
        });
    }

    function _removeNotUsedClientAddress(addressId) {
        bootboxConfirm('Deseja realmente remover este Gerador?', function (d) {
            if (!d) return;

            removeNotUsedClientAddress(addressId);

            var index = addressFamilyIds.findIndex(x => x.clientCollectionAddressId == addressId);
            if (index != -1) addressFamilyIds.splice(index, 1);

            if (typeof setFamilyNames == 'function') {
                var names = [];
                addressFamilyIds.forEach(function (e, i) { names = names.concat(e.familyNames); });
                setFamilyNames(names);
            }
        });
    }

    function removeNotUsedClientAddress(addressId) {
        demandNotUsedClientTable.row($('#demand-not-used-client-table tr[data-address-id="' + addressId + '"]')).remove();
        demandNotUsedClientTable.draw();

        $('#demand-not-used-client-table').DataTable().columns.adjust();
    }

    $('#demand-client-modal').on('shown.bs.modal', function () {
        $('#client-selection-search').val('');

        if (demandClientAddTable != null) {
            demandClientAddTable.rows().remove();
            demandClientAddTable.draw();
        }
    });


	function _setAddressInNotUsedClient(clientCollectionAddressId, alternativeServiceId) {
        if ($('#demand-not-used-client-table tr[data-address-id="' + clientCollectionAddressId + '"]').length > 0) {
            return;
        }

        var p = [];
        p.push({ name: 'ClientCollectionAddressIds.Index', value: 1 });
        p.push({ name: 'ClientCollectionAddressIds[' + 1 + ']', value: clientCollectionAddressId });

		setAddressInNotUsedClient(p, alternativeServiceId);
    }

	function setAddressInNotUsedClient(p, alternativeServiceId)
    {
        $.post('@Url.Action("GetClientAddresses", "Demand")', p, function (d) {
            $.each(d, function (i, e) {
                if ($('#demand-not-used-client-table tr[data-address-id="' + e.clientCollectionAddressId + '"]').length > 0) return;

				var serviceId = e.serviceId;
				if (alternativeServiceId != null) {
					serviceId = alternativeServiceId;
				}


                var r = $('#demand-not-used-client-table').DataTable().row.add(
                    $('<tr>').append(
                        $('<td>', { 'data-time-to-demand': e.timeToDemand, class: 'text-center' }).append('<a href="@Url.Action("Manage","Client")?id=' + e.clientId + '" target="_blank">' + e.clientId + '</a>'),
                        $('<td>').append(e.companyName),
                        $('<td>').append(e.city),
                        $('<td>').append(e.neighborhood),
                        @if (isRouteContract)
                        {
                            <text>$('<td>', { 'data-filter': e.periodicityId }).append(e.periodicityName),</text>
                        }
                        else
                        {
                            <text>$('<td>', { 'data-filter': '@perDemandStatus.ContractPeriodicityId' }).append('@perDemandStatus.Name'),</text>
                        }
                        $('<td>', { 'data-filter': e.situationId }).append(e.situationName),
                        $('<td>').append(isNull(e._LastVisitedDate, '-')),
                        $('<td>').append(e.closedCollected != null ? (e.closedCollected == true ? 'Coletou MTR ' + e.closedDemandId : 'Não Coletou MRT ' + e.closedDemandId) : "-"),
                        $('<td>').append(isNull(e._LastCollectedDate, '-')),
                        $('<td>').append(e.closedCollected != null ? (e.closedCollected == true ? 'Coletou ' + e.closedTotalWeightCollected + 'Kg' : e.closedNonCollectingReason) : "-"),
						$('<td>').append('<div class="text-center"><a href="javascript:void(0)" onclick="_setAddressInDemand(' + e.clientCollectionAddressId + ', ' + isNull(alternativeServiceId, 'null') + ');" class="badge badge-pill badge-success" title="Selecionar"><i class="simple-icon-plus"></i></a>&nbsp;<a href="javascript:_removeNotUsedClientAddress(' + e.clientCollectionAddressId + ')" class="badge badge-pill badge-danger" title="Remover"><i class="simple-icon-trash"></i></a></div>')
                    )
                );

                $(r.node()).css('background-color', e.rowColor);

                $(r.node()).attr('data-address-id', e.clientCollectionAddressId);
                @(!isRouteContract? "" : (object)Html.Raw("$(r.node()).attr('data-contract-id', e.contractId);"))
                @(!isRouteService? "" : (object)Html.Raw("$(r.node()).attr('data-service-id', serviceId);"))
            });

            $('#demand-not-used-client-table').DataTable().draw();
            $('#demand-not-used-client-table').DataTable().columns.adjust();

            if (typeof _setSelectedClientAsUnselectable == 'function') _setSelectedClientAsUnselectable();//desabilita os checkbox selecionados

            $('#demand-client-modal').modal('hide');
        });
    }

	function _setAddressInDemand(clientCollectionAddressId, alternativeServiceId) {
        if ($('#demand-client-table tr[data-address-id="' + clientCollectionAddressId + '"]').length > 0) {
            bootbox.alert('Este gerador já foi adicionado.');
            return;
        }

        removeNotUsedClientAddress(clientCollectionAddressId);

        var p = [];
        p.push({ name: 'ClientCollectionAddressIds.Index', value: 1 });
        p.push({ name: 'ClientCollectionAddressIds[' + 1 + ']', value: clientCollectionAddressId });

		if (typeof orderServicesSelected != 'undefined') {
			orderServicesSelected = alternativeServiceId;
		}

        setAddressInDemand(p);
    }

    function setAddressInDemand(p)
    {
        var index = $('#demand-client-table').DataTable().rows().count() + 1;
        $.post('@Url.Action("GetClientAddresses", "Demand")', p, function (d) {
            $.each(d, function (i, e) {
                var isContract = e.contractId != null;

                if ($('#demand-client-table tr[data-address-id="' + e.clientCollectionAddressId + '"]').length > 0) return;

                var serviceId = e.serviceId;
				if (typeof orderServicesSelected != 'undefined' && orderServicesSelected != null) {
                    serviceId = orderServicesSelected;
				}

                var r = $('#demand-client-table').DataTable().row.add(
                    $('<tr>').append(
                        $('<td>', { 'data-time-to-demand': e.timeToDemand }).append('<i class="simple-icon-shuffle"></i>'),
                        $('<td>').append(index + i),
                        $('<td>', { 'data-time-to-demand': e.timeToDemand, class: 'text-center' }).append('<a href="@Url.Action("Manage","Client")?id=' + e.clientId + '" target="_blank">' + e.clientId + '</a>'),
                        $('<td>').append(e.companyName),
                        $('<td>').append(e.city),
                        $('<td>').append(e.neighborhood),
                        @if (isRouteContract)
                        {
                            <text>$('<td>', { 'data-filter': e.periodicityId }).append(e.periodicityName),</text>
                        }
                        else
                        {
                            <text>$('<td>', { 'data-filter': '@perDemandStatus.ContractPeriodicityId' }).append('@perDemandStatus.Name'),</text>
                        }
                        $('<td>', { 'data-filter': e.situationId }).append(e.situationName),
                        $('<td>').append(isNull(e._LastVisitedDate, '-')),
                        $('<td>').append(e.closedCollected != null ? (e.closedCollected == true ? 'Coletou MTR ' + e.closedDemandId : 'Não Coletou MRT ' + e.closedDemandId) : "-"),
                        $('<td>').append(isNull(e._LastCollectedDate, '-')),
                        $('<td>').append(e.closedCollected != null ? (e.closedCollected == true ? 'Coletou ' + e.closedTotalWeightCollected + 'Kg' : e.closedNonCollectingReason) : "-"),
                        $('<td>').append('<div class="text-center"><a href="javascript:void(0)" onclick="removeClientAddress(' + e.clientCollectionAddressId + ');" class="badge badge-pill badge-danger" title="Desvincular"><i class="simple-icon-trash"></i></a></div>')
                    )
                );

                $(r.node()).css('background-color', e.rowColor);

                $(r.node()).attr('data-address-id', e.clientCollectionAddressId);
                @(!isRouteContract? "" : (object)Html.Raw("$(r.node()).attr('data-contract-id', e.contractId);"))
                @(!isRouteService? "" : (object)Html.Raw("$(r.node()).attr('data-service-id', serviceId);"))
            });

            $('#demand-client-table').DataTable().draw();
            $('#demand-client-table').DataTable().columns.adjust();

            if (typeof _setSelectedClientAsUnselectable == 'function') _setSelectedClientAsUnselectable();//desabilita os checkbox selecionados

            $('#demand-client-modal').modal('hide');
        });
    }

    function _setSelectedClientAsUnselectable() {
        if (typeof setSelectedClientAsUnselectable != 'function') return;

        setSelectedClientAsUnselectable($.distinct($('#demand-client-table tr[data-address-id], #demand-not-used-client-area tr[data-address-id]').map(function (i, e) {
            return {
                addressId: $(e).data('address-id')
            }
        }).toArray()));
    }

    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            if (settings.sInstance != "demand-not-used-client-table" && settings.sInstance != "demand-client-table") return true;

            var columnId = settings.sInstance == "demand-not-used-client-table" ? 5 : 7;

            var situation = $('#demand-client-table-filter-area [name="SituationId"]').val();
            //var timeToDemand = $('#demand-client-table-filter-area [name="TimeToDemand"]').val();
            var r = true;

            r = isNullOrWhiteSpace(situation) || situation == $(settings.aoData[dataIndex].anCells[columnId]).data('filter');
            //r = r && (isNullOrWhiteSpace(timeToDemand) || timeToDemand == $(settings.aoData[dataIndex].anCells[0]).data('time-to-demand'));

            return r;
        }
    );

    function saveOrderServiceAndOpenSelectResidueFamilyModal() {
        if ($('[type="checkbox"][data-selection-service-id]:checked').length == 0) {
            bootbox.alert('Selecione a Ordem de Serviço.');
            return;
        }

        $('#demand-client-so-select-modal').modal('hide');
		$('#demand-client-so-select-modal').attr('not-open-demand-client-modal', true);

        //salvar O.S

        openSelectResidueFamilyModal();
    }

    function selectResiudeFamilies() {
        var residueFamilyIds = [];
        $('#route-client-families-selection-table input[type="checkbox"][data-family-id]:checked').each(function (i, e) {
            residueFamilyIds.push($(e).data('family-id'));
        });

        $.post('@Url.Action("DemandClientInsertionValidateFamilies", "Demand")', { residueFamilyIds }, function (d) {//validação das famílias de acordo com agrupamento
            if (d.hasError) {
                var message = 'Houve um erro ao adicionar as familías de resíduos:<br/><br/><table class="table table-bordered table-striped"><tr><td>Erro(s)</td></tr>';
                $.each(d.data, function (i, error) { message += '<tr><td>' + error + '</td></tr>'; });
                message += '</table>';

                bootbox.alert(message);
                return;
            }
            _selectResidueFamiliesCallback();
        });
    }
</script>

<div class="modal fade" id="demand-client-modal" tabindex="-1" role="dialog" aria-labelledby="demand-client-modal-title" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold" id="demand-client-modal-title">Adicionar Geradores</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @(await Component.InvokeAsync<Web.ViewComponents.Demand.DemandClientSelectionViewComponent>(new { Model.Model.Demand.RouteId, loadFromController = Model.LoadFromController }))
            </div>
            <div class="modal-footer" style="display:block;">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="simple-icon-close"></i>&nbsp;Fechar</button>
                <button type="button" class="btn btn-success float-right" onclick="openSelectResidueFamilyModal()">Avançar</button>
                @if (isRouteService)
                {
                    <button type="button" class="btn btn-success float-right mr-1" onclick="openSelectOSModal()">Avançar e escolher O.S.</button>
                }
                @*<button type="button" class="btn btn-success float-right" onclick="selectAddresses()">Incluir no Gerador de Rota</button>*@
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="demand-client-family-modal" tabindex="-1" role="dialog" aria-labelledby="demand-client-family-modal-title" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold" id="demand-client-modal-title">Familía de Residuos</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="route-residue-family-view-component"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" type="button" onclick="selectResiudeFamilies()" id="demand-client-family-modal-save-button">Incluir Gerador</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="demand-client-so-select-modal" tabindex="-1" role="dialog" aria-labelledby="demand-client-so-select-modal-title" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md w-100" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold" id="demand-client-so-select-modal-title">Ordem de Serviços</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body w-100">
                <div id="demand-client-so-select-view-component"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" type="button" onclick="saveOrderServiceAndOpenSelectResidueFamilyModal()">Avançar</button>
            </div>
        </div>
    </div>
</div>