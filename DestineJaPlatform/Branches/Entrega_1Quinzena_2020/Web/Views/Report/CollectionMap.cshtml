@inject Services.Client.ClientReportServices clientReportServices
@inject Web.Helpers.DropDownListHelper dropDownListHelper
@inject Services.Client.ClientServices clientServices

@{
    var startDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    var endDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month));

    DTO.Client.ClientViewModel userClient = null;

    @if (User.IsClient())
    {
        userClient = await clientServices.GetViewModelByIdAsync(await clientServices.GetClientIdByLoggedUser(Context));
    }
}

@section Header
{
    <style type="text/css">
        .select2-selection {
            min-height: 37px !important;
            line-height: inherit;
            padding: 0.5rem 1rem;
            padding-top: 1px;
        }

        .input-group > .select2-container--bootstrap {
            width: auto !important;
            flex: 1 1 auto;
        }
    </style>
}

<div class="card">
    <div class="card-header">
        <div class="row">
            @if (User.IsClient())
            {
                <div class="col-12">
                    <label class="text-destineja-md float-left">@userClient.Name - @userClient.AlternativeName - @userClient.DocumentFormated</label>
                </div>
            }
            <div class="col-12 text-center" style="font-size: 20px !important; color: black;">
                Relatório - Mapa de Coleta - Resíduos
            </div>
        </div>
    </div>
    <div class="card-body">
        <form id="report-collection-map-filter-form">
            @{
                var filters = new List<ReportFilterModel>() { ReportFilterModel.StartAndEndDateFilter(new { startDate, endDate }, 3) };

                if (User.IsInRole("Administrator"))
                {
                    filters.Add(ReportFilterModel.ClientFilter(null, 3));
                }

                filters.Add(ReportFilterModel.ClientResidueFilter(userClient?.ClientId, 4));

                @(await Component.InvokeAsync<Web.ViewComponents.Report.Filter.FilterViewComponent>(filters))
            }

        </form>
        <hr />
        <div class="w-100" id="report-collection-map-view-component">
            @(await Component.InvokeAsync<Web.ViewComponents.Report.CollectionMap.IndexViewComponent>(new { startDate, endDate }))
        </div>
    </div>
</div>

@section Scripts{
    <script src="@Url.Content("~/assets/js/report.js")"></script>
    <script asp-paste-key="report-collection-map"></script>
    <script asp-paste-key="report-client-residue"></script>
    <script asp-paste-key="report-filter-client"></script>

    <script type="text/javascript">
        function reloadByFilter() {
            if (!validateInputs('report-collection-map-filter-form') || !validateStartAndEndDate()) return;

            $('#report-collection-map-view-component').load('@Url.Action("LoadCollectionMapViewComponent")', $('#report-collection-map-filter-form').serializeArray());
        }

        $('#report-collection-map-filter-form [name="ClientId"]').change(function () {
            var residueFamilyInput = $('#report-collection-map-filter-form [name="ResidueFamilyId"]');
            var residueInput = $('#report-collection-map-filter-form [name="ResidueIds"]');

            $(residueFamilyInput).empty();
            $(residueInput).empty();

            clearResidues();

            $(residueFamilyInput).append(new Option('Familía do Resíduo', '', false, false));

            //if (isNullOrWhiteSpace($(this).val())) return;

            $.post('@Url.Action("GetClientReportAvailableResidueFamilies")', { clientId: $(this).val() }, function (d) {
                $.each(d, function (i, e) {
                    $(residueFamilyInput).append($('<option>', { value: e.residueFamilyId, 'data-name': e.name }).append(e.name));
                });

                clearResidues();
            });
        }).change();
    </script>
}