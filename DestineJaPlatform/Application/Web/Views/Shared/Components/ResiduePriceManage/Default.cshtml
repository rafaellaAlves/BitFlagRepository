@using Web.Helpers

@model DTO.Residue.ResiduePriceViewModel

@inject Web.Helpers.DropDownListHelper dropDownListHelper
@inject Services.Residue.ResidueFamilyServices residueFamilyServices
@inject Services.Residue.ResidueServices residueServices
@inject Services.Residue.UnitOfMeasurementServices unitOfMeasurementServices

<form id="residue-price-manage-form">
    <input type="hidden" value="@Model.ResiduePriceId" name="ResiduePriceId" />
    <input type="hidden" value="@Model.RecipientId" name="RecipientId" />
    <div class="row">
        <div class="col-md-12 form-group">
            <label class="required">Familia do Resíduo</label>
            @Html.DropDownList("ResidueFamilyId", dropDownListHelper.ToSelectListItem<ApplicationDbContext.Models.ResidueFamily, int, string>(await residueFamilyServices.GetDataAsNoTrackingAsync(x => !x.IsDeleted), c => c.ResidueFamilyId, c => c.Name, Model.ResidueFamilyId.ToString()), "Selecione", new { Class = "form-control w-100", onchange = "loadResidues()" })
        </div>
        @*<div class="col-md-6">
            <label class="required">Resíduo</label>
            @Html.DropDownList("ResidueId", dropDownListHelper.ToSelectListItem<ApplicationDbContext.Models.Residue, int, string>((Model.ResiduePriceId.HasValue? await residueServices.GetDataAsNoTrackingAsync(x => !x.IsDeleted) : new List<ApplicationDbContext.Models.Residue>()), c => c.ResidueId, c => c.Name, Model.ResidueId.ToString()), "Selecione", new { Class = "form-control w-100", DataValue = Model.ResidueId, onchange = "setUnitOfMeasurement()" })
        </div>*@
        <div class="col-md-6 form-group">
            <label class="required">Unidade de Medida</label>
            @Html.DropDownList("UnitOfMeasurementId", dropDownListHelper.ToSelectListItem<ApplicationDbContext.Models.UnitOfMeasurement, int, string>((await unitOfMeasurementServices.GetDataAsNoTrackingAsync()).OrderBy(x => x.Order), c => c.UnitOfMeasurementId, c => c.Name, Model.UnitOfMeasurementId.ToString()), "Selecione", new { Class = "form-control w-100" })
        </div>
        <div class="col-md-6 form-group">
            <label class="required">Preço da Destinação</label>
            <input class="form-control money" placeholder="Preço da Destinação" value="@Model._Price" name="_Price" />
        </div>
    </div>
</form>
<script asp-cut-key="residue-price-manage">
    @*function loadResidues() {
        var faimlyId = $('#residue-price-manage-form [name="ResidueFamilyId"]').val();
        var residueId = $('#residue-price-manage-form [name=\'ResidueId\']').data('value');

        $('#residue-price-manage-form [name="ResidueId"]').empty();
        if (isNullOrWhiteSpace(faimlyId)) {
            $('#residue-price-manage-form [name="ResidueId"]').append($('<option>', { value: '' }).append('Selecione'));
            return;
        }

        $.post('@Url.Action("GetDataByFamilyId", "Residues")', { residueFamilyId: faimlyId }, function (d) {
            $.each(d, function (i, e) {
                var option = $('<option>', { value: e.residueId, selected: (residueId == e.residueId ? true : false) }).append(e.name);
                option.data('unitOfMeasurementId', e.unitOfMeasurementId);

                $('#residue-price-manage-form [name="ResidueId"]').append(option);
            });

            if (d.length == 0) {
                $('#residue-price-manage-form [name="ResidueId"]').append($('<option>', { value: '' }).append('Nenhum resíduo encontrado.'));
            } 

            if (isNullOrWhiteSpace(residueId)) setUnitOfMeasurement();

            $('#residue-price-manage-form [name=\'ResidueId\']').data('value', null);
        });
    }
    $(document).ready(loadResidues);*@

    function saveResiduePrice(callback) {
        if (!validateInputs('residue-price-manage-form')) return;

        $.post('@Url.Action("ManageAjax", "ResiduePrice")', $('#residue-price-manage-form').serializeArray(), callback);
    }

    //function setUnitOfMeasurement() {
    //    $('#residue-price-manage-form [name="UnitOfMeasurementId"]').val($('#residue-price-manage-form [name="ResidueId"] option:selected').data('unitOfMeasurementId'));
    //}
</script>