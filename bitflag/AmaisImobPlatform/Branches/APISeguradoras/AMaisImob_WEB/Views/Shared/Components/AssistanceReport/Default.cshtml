@inject AMaisImob_WEB.BLL.CompanyTypeFunctions companyTypeFunctions
@{
    var realEstateId = companyTypeFunctions.GetDataByExternalCode("IMOBILIARIA").CompanyTypeId;
}
<form id="assistance-report-form" action="@Url.Action("Export", "Assistance")" method="post">
    <div class="row">
        <div class="col-md-9">
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Pesquisar</span>
                    </div>
                    <input placeholder="Pesquisar..." class="form-control" data-toggle="search-datatable" data-target="#assistance-report-company-table" />
                </div>
            </div>
            <table id="assistance-report-company-table" class="table display responsive" style="border-collapse: collapse !important; width:100%;">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="assistance-checkbox-select-all-companies" /></th>
                        <th>Corretora</th>
                        <th>Razão social/Nome</th>
                        <th>CNPJ/CPF</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div class="col-md-3">
            <div class="row">
                <div class="col-12 form-group">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Mês de Referência</span>
                        </div>
                        <input type="text" class="form-control monthYear required" name="RefMonth" placeholder="Mês de Referência">
                    </div>
                </div>
                <div class="col-12 text-center form-group">
                    <button class="btn btn-primary" type="button" onclick="getAssistanceReport()" style="width: 100%;"><i class="fas fa-file-excel"></i>&nbsp;Gerar Relatório (Excel)</button>
                </div>
                <div class="col-12 text-center form-group">
                    <button class="btn btn-primary" type="button" onclick="getAssistanceReportTXT()" style="width: 100%;"><i class="fas fa-file"></i>&nbsp;Gerar Relatório (TXT)</button>
                </div>
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    var assistance_datatables = $('#assistance-report-company-table').DataTable({
		proccessing: true,
		serverSide: false,
		searching: true,
		lengthChange: false,
        dom: 'tip',
        paging: false,
        scrollY: '250px',
        scrollCollapse: true,
		ajax: {
            url: '@Url.Action("List", "Company")',
            data: function (d) {
                d.companyTypeId = '@realEstateId'
            },
			type: 'POST'
        },
        drawCallback: function () {
            _MaskData();
        },
        columns: [
            {
                data: 'Check',
                render: function (data, type, row) {
                    return '<input type="checkbox" data-company-id="' + row.companyId + '" />';
                }
            },
            {
                data: 'ParentCompany',
                render: function (data, type, row) {
                    if (row.parentRazaoSocial != null)
                        return '<i>' + row.parentRazaoSocial + '</i>';
                    else
                        return '<i>' + row.parentFirstName + ' ' + row.parentLastName + '</i>';
                }
            },
			{ data: 'firstName',
                render: function (data, type, row) {
                    return !IsNullOrWhiteSpace(row.razaoSocial) ? row.razaoSocial : row.firstName + " " + row.lastName;
                }
            },
            {
                data: 'CNPJ',
                render: function (data, type, row) {
                    return !IsNullOrWhiteSpace(row.cnpj) ? '<span class="cnpj">' + row.cnpj + '</span>' : '<span class="cpf">' + row.cpf + '</span>';
                }
            }
        ]
    });

	$('#assistance-checkbox-select-all-companies').change(function () {
        var checked = this.checked;
        $('#assistance-report-company-table input[type="checkbox"]').each(function (i, e) { e.checked = checked });
    });

    function validateAssistanceReport() {
        var r = true;
        if (!validateInputs('assistance-report-form')) r = false;

        if (!IsNullOrWhiteSpace($('#assistance-report-form [name="RefMonth"]').val())) {
            var dSplit = $('#assistance-report-form [name="RefMonth"]').val().split('/'), month = dSplit[0], year = dSplit[1];
            var currentDate = new Date(), currentMonth = currentDate.getMonth() + 1, currentYear = currentDate.getFullYear();

            if (year > currentYear || (month > currentMonth && year >= currentYear)) {
                $('#assistance-report-form [name="RefMonth"]').closest('.input-group').after('<div class="text-danger">A data não pode ser posterior ao mês atual.</div>');
                r = true;
            }
        }

        if ($('#assistance-report-company-table tbody input[type="checkbox"]:checked').length == 0) {
            alert('Selecione ao menos uma imobiliária.');
            r = false;
        }

        return r;
    }

    function getAssistanceReport() {
        if (!validateAssistanceReport()) return;

        var newElements = [];

        $('#assistance-report-company-table tbody input[type="checkbox"]:checked').each(function (i, e) {
            var element = $('<input>', { type: 'hidden', name: 'CompanyIds.Index', value: i });
            var element1 = $('<input>', { type: 'hidden', name: 'CompanyIds[' + i + ']', value: $(e).data('company-id') });
            newElements.push(element, element1);

            $('#assistance-report-form').append(element);
            $('#assistance-report-form').append(element1);
        });

        $('#assistance-report-form').attr('action', '@Url.Action("Export", "Assistance")');
        $('#assistance-report-form').submit();

        newElements.forEach(function (e, i) { $(e).remove(); });
    }

    function getAssistanceReportTXT() {
        if (!validateInputs('assistance-report-form')) return;

        var newElements = [];

        $('#assistance-report-company-table tbody input[type="checkbox"]:checked').each(function (i, e) {
            var element = $('<input>', { type: 'hidden', name: 'CompanyIds.Index', value: i });
            var element1 = $('<input>', { type: 'hidden', name: 'CompanyIds[' + i + ']', value: $(e).data('company-id') });
            newElements.push(element, element1);

            $('#assistance-report-form').append(element);
            $('#assistance-report-form').append(element1);
        });

        $('#assistance-report-form').attr('action', '@Url.Action("ExportTXT", "Assistance")');
        $('#assistance-report-form').submit();

        newElements.forEach(function (e, i) { $(e).remove(); });
    }

    $(window).ready(function () {
        _MaskData();
        initializeDatatableSearch();
    });
</script>