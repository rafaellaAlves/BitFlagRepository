@model DTO.User.UserModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewData["Title"] = "Recuperação de senha";

	string tokenPassword = "";
	if (Context.Request.Query.ContainsKey("token"))
	{

		tokenPassword = Context.Request.Query["token"];
	}

}
@{ Html.RenderPartial("~/Views/Shared/_TopMessages.cshtml"); }

<form id="form" action="@Url.Action("NewPassword","Account")" method="post">
	<div id="alertSuccessPasswordRecovery" class="alert alert-success fade show text-center" role="alert" style="display: none;">
		<strong>Sua senha foi alterada com sucesso!</strong>
	</div>
	<div class="card shadow">
		<div class="card-header">
			Recuperação de senha
		</div>
		<div class="card-body">
			<input type="hidden" id="UserId" name="userId" value="@Model.UserId" />
			<input type="hidden" class="form-control" id="TokenPassword" name="TokenPassword" value="@tokenPassword">
			<div class="col-md-4 form-control offset-md-4 jumbotron">
				<div id="card-error" class="text-warning" style="text-align:center; display:none;">
					<i class="fas fa-exclamation-triangle" style="font-size: 5em;"></i>
					<br/><br />
					<h5 class="control-label text-center"><strong>Página expirada!</strong></h5>
				</div>
				<div id="card-data">
					<h5 class="control-label text-center"><strong>Redefinição da senha</strong></h5>
					<div class="form-group col-md-12">
						<label class="control-label" for="NewPassword">Nova Senha</label>
						<input type="password" class="form-control" id="NewPassword" name="newPassword" placeholder="Nova Senha">
					</div>
					<div class="form-group col-md-12">
						<label class="control-label" for="NewPasswordConfirmation">Confirmação da Nova Senha</label>
						<input type="password" class="form-control" id="NewPasswordConfirmation" value="" placeholder="Confirmação de Senha">
					</div>
					<div style="width: 100%; text-align: center">
						<button type="button" id="buttonSubmit" class="btn btn-primary"><i class="fa fa-key"></i>&nbsp;Alterar Senha</button>
					</div>
					<script type="text/javascript">
					$('#buttonSubmit').click(function () {
						var hasError = false;
						$('#form .invalid-feedback').remove();
						$('#alertForm').hide();

						if (!IsNullOrWhiteSpace($('#NewPassword').val())) {

							// Password Confirmation
							if (IsNullOrWhiteSpace($('#NewPasswordConfirmation').val())) {
								$('#NewPasswordConfirmation').after('<div class="invalid-feedback">Preencha a confirmação de senha.</div>');
								hasError = true;
							}

							// Wrong Passwords Confirmation
							else if ($('#NewPasswordConfirmation').val() != $('#NewPassword').val()) {
								$('#NewPasswordConfirmation').after('<div class="invalid-feedback">Senha de Confirmação errada.</div>');
								hasError = true;
							}
						}

						else {
							$('#NewPassword').after('<div class="invalid-feedback">Preencha a nova senha.</div>');
							hasError = true;
						}

						if (hasError) {
							$('#alertForm').show();
							$("html, body").animate({ scrollTop: 0 }, "slow");
							$('#form .invalid-feedback').show();
						}
						else {
							var d = { TokenPassword: '@tokenPassword', UserId: @Model.UserId,  NewPassword: $('#NewPassword').val()};
							$.ajax({
								url: '@Url.Action("NewPassword", "Account")',
								type: 'POST',
								dataType: 'json',
								data: d,
								success: function (data) {
                                    if (data) {
                                        alert("Senha alterada com sucesso!");
                                        document.location.href = "@Url.Action("Login", "Account")";
									}
									else {
										$('#alertSuccessPasswordRecovery').hide();
										$('#card-error').show();
										$('#card-data').hide();
									}
								}
							});
						}
					});
					</script>
				</div>
			</div>
		</div>
	</div>
</form>