@model WEB.Models.Subscription.Plan.ChoosePlanViewModel
@inject Services.OccupationArea.OccupationAreaService occupationAreaService
@inject Services.ProfessionalSpecialty.ProfessionalSpecialtyService professionalSpecialtyService
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Planos Disponíveis";
}

@section Styles {
    <style type="text/css">
        .selected-plan {
            background-color: rgb(73, 186, 132);
            color: white;
            border-color: black;
        }

        .form_error {
            color: red;
            display: none;
        }
    </style>
}

<div class="row">
    <div class="col-12">
        <div class="mb-2">
            <h2>
                Olá Dr(a). <b>@Model.Subscription.FullName</b>!
                <br />
                <small>
                    Veja os planos para o seu perfil. Anote o número desta simulação para acessos futuros: <b>@Model.Subscription.Reference</b><br />
                    @if ((new List<string>() { "SP", "PR", "GO", "SE" }).Any(x => x.ToUpper().Equals(Model.Subscription.Crmvstate.ToUpper())))
                    {
                        <span>Os Valores abaixo já contemplam o desconto!</span>
                    }
                </small>
            </h2>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card">

            <div style="color: white; background-color: #49ba84; vertical-align: middle; border-top-left-radius: 0.75rem; border-top-right-radius: 0.75rem;" class="card-header text-center h5 pt-2 pb-2">
                Escolha seu Plano
            </div>
            <div class="card-body">
                <div class="d-md-none">
                    @foreach (var plan in Model.Plans)
                    {
                        <div>
                            <h2>@plan.Name</h2>
                            <table class="table table-striped table-responsive-sm table-bordered">
                                <thead>
                                    <tr>
                                        <th colspan="2">Coberturas</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PlanCoverageTypes)
                                    {
                                        <tr>
                                            <td>
                                                @item.Description
                                            </td>
                                            <td class="text-center text-nowrap">
                                                @plan.Coverages[item.PlanCoverageTypeId].Description
                                            </td>
                                        </tr>

                                    }
                                    <tr>
                                        <td><b>Assinatura Mensal</b></td>
                                        <td class="plan text-center">
                                            <b>@plan.MonthlyCostFormatted</b>
                                        </td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="2" class="plan plan-@plan.PlanId text-center">
                                            <button onclick="choosePlan(@plan.PlanId, '@plan.Name', '@plan.MonthlyCostFormatted')" class="plan-selector plan-selector-@plan.PlanId btn btn-secondary btn-block">Escolher</button>
                                            <b style="font-size: 2em; display: none;" class="plan-selected plan-selected-@plan.PlanId"><i class="simple-icon-check"></i></b>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                </div>
                <div class="d-none d-md-block">
                    <table class="table table-striped table-responsive-sm table-bordered">
                        <thead>
                            <tr>
                                <th style="font-size: 1.5em;">Coberturas</th>
                                @foreach (var plan in Model.Plans)
                                {
                                    <th style="font-size: 1.5em;" class="plan plan-@plan.PlanId text-center">@plan.Name</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PlanCoverageTypes)
                            {
                                <tr>
                                    <td>@item.Description</td>
                                    @foreach (var plan in Model.Plans)
                                    {
                                        if (plan.Coverages.ContainsKey(item.PlanCoverageTypeId))
                                        {
                                            <td class="plan plan-@plan.PlanId text-center">
                                                @plan.Coverages[item.PlanCoverageTypeId].Description
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="plan plan-@plan.PlanId text-center">-</td>
                                        }

                                    }
                                </tr>
                            }
                            <tr style="font-size: 1.5em;">
                                <td><b>Assinatura Mensal</b></td>
                                @foreach (var plan in Model.Plans)
                                {
                                    <td class="plan plan-@plan.PlanId text-center">
                                        <b>@plan.MonthlyCostFormatted</b>
                                    </td>
                                }
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td></td>
                                @foreach (var plan in Model.Plans)
                                {
                                    <td class="plan plan-@plan.PlanId text-center">
                                        <button onclick="choosePlan(@plan.PlanId, '@plan.Name', '@plan.MonthlyCostFormatted')" class="plan-selector plan-selector-@plan.PlanId btn btn-secondary btn-block">Escolher</button>
                                        <b style="font-size: 2em; display: none;" class="plan-selected plan-selected-@plan.PlanId"><i class="simple-icon-check"></i></b>
                                    </td>
                                }
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<a name="personal-info-anchor"></a>
<form id="pesonal-info-form" style="display: none;" method="post" action="@Url.Action("SelectPlan", "Subscription", new { reference = Model.Subscription.Reference })">
    <input type="hidden" name="reference" value="@Model.Subscription.Reference" />
    <input type="hidden" name="planId" value="@Model.Subscription.PlanId" />
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card card-blue">
                <div class="card-body">
                    <h5 class="card-title">
                        Você escolheu o <b id="plan-name"></b>
                        <br />
                        <small>Preencha abaixo seus dados cadastrais.</small>
                    </h5>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Nome</label>
                                <input name="FullName" id="FullName" value="@Model.Subscription.FullName" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                                <span class="form_error" id="invalid-name">Digite um nome entre 5 e 30 caracteres</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">CRMV <span data-toggle="tooltip" title="Volte a tela inicial para fazer a correção deste campo."><i class="simple-icon-question"></i></span></label>
                                <input value="@Model.Subscription.Crmv" id="Crmv" type="text" disabled="disabled" class="form-control" />

                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Estado do CRMV <span data-toggle="tooltip" title="Volte a tela inicial para fazer a correção deste campo."><i class="simple-icon-question"></i></span></label>
                                <select name="Crmvstate" class="form-control" id="Crmvstate" disabled="disabled">
                                    <option value="">Selecione</option>
                                    @foreach (var item in Services.Utils.UtilsService.GetStates())
                                    {
                                        <option @(Model.Subscription.Crmvstate == item.Code ? "selected=\"selected\"" : "") value="@item.Code">@item.Description</option>
                                    }
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Área de Atuação</label>
                                <select name="OccupationAreaId" id="OccupationAreaId" class="form-control">
                                    <option value="">Selecione</option>
                                    @foreach (var item in await occupationAreaService.GetActiveAsync())
                                    {
                                        <option @(Model.Subscription.OccupationAreaId == item.OccupationAreaId ? "selected=\"selected\"" : "") value="@item.OccupationAreaId">@item.Name</option>
                                    }
                                </select>
                                <span class="form_error" id="error1">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Especialidade</label>
                                <select name="ProfessionalSpecialtyId" id="ProfessionalSpecialtyId" class="form-control">
                                    <option value="">Selecione</option>
                                    @foreach (var item in await professionalSpecialtyService.GetActiveAsync())
                                    {
                                        <option @(Model.Subscription.ProfessionalSpecialtyId == item.ProfessionalSpecialtyId ? "selected=\"selected\"" : "") value="@item.ProfessionalSpecialtyId">@item.Name</option>
                                    }
                                </select>
                                <span class="form_error" id="error2">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Ano de Formação</label>
                                <select class="form-control" id="GraduationYear" name="GraduationYear">
                                    <option value="">Selecione</option>
                                    @for (int i = DateTime.Now.Year; i >= 1940; i--)
                                    {
                                        <option @(Model.Subscription.GraduationYear == i ? "selected=\"selected\"" : "") value="@i">@i</option>
                                    }
                                </select>
                                <span class="form_error" id="error3">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">CPF</label>
                                <input name="Cpf" id="Cpf" value="@Model.Subscription.Cpf" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                                <span class="form_error" id="invalid-cpf">Digite um CPF válido</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="control-label">Data de Nascimento <span data-toggle="tooltip" title="Volte a tela inicial para fazer a correção deste campo."><i class="simple-icon-question"></i></span></label>
                                <input type="text" id="BirthDate" value="@Model.Subscription.BirthDateFormatted" class="form-control" disabled="disabled" />

                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Telefone</label>
                                <input name="PhoneNumber" id="PhoneNumber" value="@Model.Subscription.PhoneNumber" type="tel" class="form-control" />
                                <span class="form_error">Digite um número de telefone válido</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Celular</label>
                                <input name="MobileNumber" id="MobileNumber" value="@Model.Subscription.MobileNumber" type="tel" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                                <span class="form_error" id="invalid-mobilenumber">Digite um número de celular válido</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">E-mail</label>
                                <input name="Email" id="Email" value="@Model.Subscription.Email" type="email" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                                <span class="form_error" id="invalid-email">Digite um E-mail válido</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">CEP</label>
                                <input name="ZipCode" id="ZipCode" value="@Model.Subscription.ZipCode" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">Endereço</label>
                                <input name="Address" id="Address" value="@Model.Subscription.Address" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="control-label">Número</label>
                                <input name="AddressNumber" id="AddressNumber" value="@Model.Subscription.AddressNumber" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Complemento</label>
                                <input name="AddressAdditionalInfo" id="AddressAdditionalInfo" value="@Model.Subscription.AddressAdditionalInfo" type="text" class="form-control" />
                                <span class="form_error">Digite um complemento entre 3 e 20 caracteres</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">Bairro</label>
                                <input name="Neighborhood" id="Neighborhood" value="@Model.Subscription.Neighborhood" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">Cidade</label>
                                <input name="City" id="City" value="@Model.Subscription.City" type="text" class="form-control" />
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">Estado</label>
                                <select name="State" id="State" class="form-control">
                                    <option value="">Selecione</option>
                                    @foreach (var item in Services.Utils.UtilsService.GetStates())
                                    {
                                        <option @(Model.Subscription.State == item.Code ? "selected=\"selected\"" : "") value="@item.Code">@item.Description</option>
                                    }
                                </select>
                                <span class="form_error">Campo obrigatório</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-6">
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Voltar</a>
        </div>
        <div class="col-6 text-right">
            <button style="display: none;" onclick="return validateForm()" type="submit" class="btn btn-primary">Avançar</button>
        </div>
    </div>
</form>

@section Scripts {
    <script src="~/assets/js/Utils.js"></script>
    <script type="text/javascript">
        function choosePlan(planId, planName, planMonthlyCost) {
            $('.plan').removeClass('selected-plan');
            $('.plan-' + planId).addClass('selected-plan');

            $('.plan-selector').show();
            $('.plan-selector-' + planId).hide();

            $('.plan-selected').hide();
            $('.plan-selected-' + planId).show();

            $('#pesonal-info-form input[name="planId"]').val(planId);
            $('#pesonal-info-form #plan-name').html(planName);
            $('#pesonal-info-form button[type="submit"]').show();
            $('#pesonal-info-form').show();

            var anchor = $("a[name='personal-info-anchor']");
            $('html, body').animate({ scrollTop: anchor.offset().top }, 'slow');
        }

        function validateForm() {
            var name = $('#FullName').val();
            var area = $('#OccupationAreaId').val();
            var especialidade = $('#ProfessionalSpecialtyId').val();
            var ano = $('#GraduationYear').val();
            var cpf = $('#Cpf').val();
            var telefone = $('#PhoneNumber').val();
            var celular = $('#MobileNumber').val();
            var email = $('#Email').val();
            var cep = $('#ZipCode').val();
            var endereco = $('#Address').val();
            var numero = $('#AddressNumber').val();
            var complemento = $('#AddressAdditionalInfo').val();
            var bairro = $('#Neighborhood').val();
            var cidade = $('#City').val();
            var estado = $('#State').val();
            var cont = 0;

            //NOME
            if (name == '') {
                $('#FullName').next().show();
                $('#invalid-name').hide();
                focus('#FullName');
                cont = cont + 1;
            } else if (name.length < 5 || name.length > 30) {
                $('#invalid-name').show();
                $('#FullName').next().hide();
                focus('#FullName');
                cont = cont + 1;
            } else {
                forceFocus('#FullName');
                $('#FullName').next().hide();
                $('#invalid-name').hide();

            }

            //CRMV E INFORMAÇÕES VET
            if (area == '') {
                $('#error1').show();
                focus('#OccupationAreaId');
                cont = cont + 1;
            } else {
                forceFocus('#OccupationAreaId');
                $('#error1').hide();
            }
            if (especialidade == '') {
                $('#error2').show();
                focus('#ProfessionalSpecialtyId');
                cont = cont + 1;
            } else {
                forceFocus('#ProfessionalSpecialtyId');
                $('#error2').hide();
            }
            if (ano == '') {
                $('#error3').show();
                focus('#GraduationYear');
                cont = cont + 1;
            } else {
                forceFocus('#GraduationYear');
                $('#error3').hide();
            }

            //CPF
            if (cpf == '') {
                $('#Cpf').next().show();
                $('#invalid-cpf').hide();
                focus('#Cpf');
                cont = cont + 1;
            } else if (!IsCpf(cpf)) {
                $('#invalid-cpf').show();
                $('#Cpf').next().hide();
                focus('#Cpf');
                cont = cont + 1;
            } else {
                forceFocus('#Cpf');
                $('#Cpf').next().hide();
                $('#invalid-cpf').hide();
            }

            //TELEFONE
            if (telefone == '') {
                forceFocus('#PhoneNumber');
                $('#PhoneNumber').next().hide();
            } else {
                forceFocus('#PhoneNumber');
                $('#PhoneNumber').next().hide();
            }

            //CELULAR
            if (celular == '') {
                $('#MobileNumber').next().show();
                $('#invalid_mobilenumber').hide();
                focus('#MobileNumber');
                cont = cont + 1;
            } else {
                forceFocus('#MobileNumber');
                $('#MobileNumber').next().hide();
                $('#invalid-mobilephone').hide();
            }

            //EMAIL
            if (email == '') {
                $('#Email').next().show();
                $('#invalid_email').hide();
                focus('#Email');
                cont = cont + 1;
            } else {
                forceFocus('#Email');
                $('#Email').next().hide();
                $('#invalid-email').hide();
            }

            //CEP
            if (cep == '') {
                $('#ZipCode').next().show();
                focus('#ZipCode');
                cont = cont + 1;
            } else {
                forceFocus('#ZipCode');
                $('#ZipCode').next().hide();
            }

            //ENDEREÇO
            if (endereco == '') {
                $('#Address').next().show();
                focus('#Address');
                cont = cont + 1;
            } else {
                forceFocus('#Address');
                $('#Address').next().hide();
            }

            //NUMERO
            if (numero == '') {
                $('#AddressNumber').next().show();
                focus('#AddressNumber');
                cont = cont + 1;
            } else {
                forceFocus('#AddressNumber');
                $('#AddressNumber').next().hide();
            }

            //COMPLEMENTO
            if (complemento.length < 3 || complemento.length > 20) {
                $('#AddressAdditionalInfo').next().hide();
                focus('#AddressAdditionalInfo');
                cont = cont + 1;
            } else {
                forceFocus('#AddressAdditionalInfo');
                $('#AddressAdditionalInfo').next().hide();
            }

            //BAIRRO
            if (bairro == '') {
                $('#Neighborhood').next().show();
                focus('#Neighborhood');
                cont = cont + 1;
            } else {
                forceFocus('#Neighborhood');
                $('#Neighborhood').next().hide();
            }

            //CIDADE
            if (cidade == '') {
                $('#City').next().show();
                focus('#City');
                cont = cont + 1;
            } else {
                forceFocus('#City');
                $('#City').next().hide();
            }

            //ESTADO
            if (estado == '') {
                $('#State').next().show();
                focus('#State');
                cont = cont + 1;
            } else {
                forceFocus('#State');
                $('#State').next(Name.hide());
            }

            if (cont == 0) {
                $("#pesonal-info-form").submit();
            } else {
                return false;
            }
        }

        $(document).ready(function () {
            //MASCARAS

            $('#ZipCode').mask('99999-999');
            $('#Cpf').mask('999.999.999-99');
            //$('input[name = NumberCNPJ]').mask('99.999.999/9999-99');

            //PREENCHE ENDEREÇO AUTOMÁTICO
            $('#ZipCode').blur(function () {

                var cep = $(this).val().replace(/\D/g, '');

                if (cep != "") {
                    var validacep = /^[0-9]{8}$/;
                    if (validacep.test(cep)) {

                        $("#rua").val("...");
                        $("#bairro").val("...");
                        $("#cidade").val("...");
                        $("#uf").val("...");


                        $.getJSON("//viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                $('#Address').val(dados.logradouro);
                                $('#Neighborhood').val(dados.bairro);
                                $('#City').val(dados.localidade);
                                $('#State').val(dados.uf);

                            }
                            else {
                                clearFormZipcode();
                                alert("CEP não encontrado.");
                            }
                        });
                    }
                    else {
                        clearFormZipcode();
                        alert("Formato de CEP inválido.");
                    }
                }
                else {

                    clearFormZipcode();
                }
            });
        });


    </script>
    @if (Model.Subscription.PlanId.HasValue)
    {
        var plan = Model.Plans.Single(x => x.PlanId == Model.Subscription.PlanId);

        <script type="text/javascript">
            $(document).ready(function () {
                setTimeout(function () {
                    choosePlan(@plan.PlanId, '@plan.Name', '@plan.MonthlyCostFormatted');
                }, 1000)

            });
        </script>
    }

}
