@inject FUNCTIONS.User.UserFunctions userFunctions

<div class="row">
    <div class="col-md-@if (User.IsInRole("Administrator") || User.IsInRole("Contact Manager")) {<text>9</text>}else{<text>12</text>}">
        <div class="input-group mb-3">

            <input id="search-table" type="text" class="form-control" placeholder="Procurar..." />
        </div>
    </div>
    @if (User.IsInRole("Administrator") || User.IsInRole("Contact Manager"))
    {
        <div class="col-md-3">
            <select id="ResponsibleId" class="form-control" name="ResponsibleId">
                <option>Todos os Responsáveis</option>
                @foreach (var item in userFunctions.GetDataByRole("Administrator", "Salesman"))
                {
                    <option data-full-name="@item.FirstName @item.LastName" value="@item.Id">@item.FirstName @item.LastName </option>
                }
            </select>
        </div>

    }
</div>
<hr />
<div class="table-responsive">
    <table class="table table-striped table-bordered" id="table-active-jobs">
        <thead>
            <tr>
                <th>&nbsp;</th>
                <th>Cliente</th>
                <th>Serviço</th>
                <th>Etapa</th>
                <th>Responsável</th>
                <th>Última Interação</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<script type="text/javascript">

    var _ActiveJobsTypingTimer;
    var _ActiveJobsDoneTypingInterval = 1000;

    var tableActiveJobs = $('#table-active-jobs').DataTable({
		proccessing: true,
        serverSide: true,
        searching: false,
		lengthChange: false,
		dom: 'tip',
		ajax: {
            url: '@Url.Action("GetActiveJobs", "Workbench")',
            data: function (d) {
                d.responsibleId = $('#ResponsibleId').val()
            },
			type: 'POST'
        },
        order: [[0, 'desc']],
        columns: [
            {
                data: 'JobTerraNostraId',
                render: function (data, type, row) {
                    return '<a title="Editar Registro" href="@Url.Action("GetSteps", "Workbench")?jobId=' +  row.jobId + '">' + (row.jobTerraNostraId != null ? row.jobTerraNostraId + '/' + row._CreatedDateYear : "[SEM NÚMERO]")  + '</a>';
                }
            },
            {
                data: 'ClientName',
                render: function (data, type, row) {
                    return row.clientName;
                }
            }, {
                data: 'JobDescription',
                render: function (data, type, row) {
                    return row.jobDescription;
                }
            }, {
                data: 'StepDescription',
                render: function (data, type, row) {
                    return !row.jobInteractionViewModel ? '-' : row.jobInteractionViewModel.stepDescription;
                }
            }, {
                data: 'UserName',
                render: function (data, type, row) {
                    return !row.jobInteractionViewModel ? '-' : row.jobInteractionViewModel.userName;
                }
            }, {
                data: 'JobInteractionCreatedDate',
                render: function (data, type, row) {
                    return !row.jobInteractionViewModel ? '-' : row.jobInteractionViewModel._CreatedDate;
                }
            }
        ]
    });

    function _ActiveJobsDoneTyping() {
        if ($.fn.DataTable.isDataTable('#table-active-jobs')) {
            tableActiveJobs.search($('#search-table').val()).draw();
        }
    }
    $('#search-table').keyup(function () {
        clearTimeout(_ActiveJobsDoneTypingInterval);
        _ActiveJobsTypingTimer = setTimeout(_ActiveJobsDoneTyping, _ActiveJobsDoneTypingInterval);
    });
    $('#search-table').keydown(function () {
        clearTimeout(_ActiveJobsDoneTyping);
    });


    $('#ResponsibleId').on('change', _ActiveJobsDoneTyping);
</script>
