@model List<Web.Utils.UserType>

<div class="row">
    <div class="col-md-10">
        <div class="input-group mb-3">

            <input id="_UserIndexSearch" type="text" class="form-control" placeholder="Procurar..." />
        </div>
    </div>
    @*
        <div class="col-md-2">
            <a href="javascript:void(0)" id="NewClientButton" class="btn btn-success pull-right w-100"><i class="fas fa-users"></i>&nbsp;Clientes</a>
        </div>
    *@
    <div class="col-md-2">
        <a href="@Url.Action("Manage", "User")@if(Model.Count > 0){<text>?userType=@string.Join(";", Model.Select(x => (int)x))</text>}" class="btn btn-success pull-right w-100"><i class="simple-icon-plus"></i>&nbsp;Novo</a>
    </div>
</div>
<hr />
<div class="table-responsive">
    <table id="_UserIndexTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Nome</th>
                <th>E-mail</th>
                <th>Telefone</th>
                <th>Perfil</th>
                <th>Ativo?</th>
                @if (Model.Contains(Web.Utils.UserType.Agent))
                {
                    <th>Data Criação</th>
                }
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<script type="text/javascript">

    var _UserIndexTypingTimer;
    var _UserIndexDoneTypingInterval = 500;
    var datatables = $('#_UserIndexTable').DataTable({
        @if (Model.Contains(Web.Utils.UserType.Agent))
        {
        <text>
        "order": [[5, "desc"]],
        serverSide: true,
        </text>
        }
        else
        {
        <text>
        serverSide: false,
        </text>
        }
        proccessing: true,
        searching: false,
        lengthChange: false,
        dom: 'tip',
        ajax: {
            url: '@Url.Action("List", "User")',
            type: 'POST',
            data: {
                userType: '@string.Join(";", Model.Select(x => (int)x))'
            }
		},
		columns: [
            {
                data: 'FirstName',
                render: function (data, type, row) {
                    return '<a title="Editar Registro" href="@Url.Action("Manage", "User")?id=' + row.userId + @if(Model.Count > 0){<text>'&userType=@string.Join(";", Model.Select(x => (int)x))' + </text>}'">' + row.firstName + ' ' + (IsNullOrWhiteSpace(row.lastName) ? '' : row.lastName) + '</a>';
                }
            },
            {
                data: 'Email',
                render: function (data, type, row) {
                    return row.email != null? row.email : '-';
                }
            },
            {
                data: 'PhoneNumber',
                render: function (data, type, row) {
                    return row.phoneNumber != null ? row.phoneNumber : '-';
                }
            },
            {
                data: 'Role',
                render: function (data, type, row) {
                    return row.role != null ? row.role : '-';
                }
            },
            {
                orderable: false,
                data: 'IsActive',
                render: function (data, type, row) {
                    var r = '<div class="text-center" style="white-space:nowrap;">';
                    r += row.isActive ? '<span class="badge badge-pill badge-success text-center">Sim</span>' : '<span class="badge badge-pill badge-danger text-center">Não</span>';
                    r += '</div>';
                    return r;
                }
            },

            @if (Model.Contains(Web.Utils.UserType.Agent))
            {
                <text>
            {
                data: 'CreatedDate',
                render: function (data, type, row) {
                    return row._CreatedDate;
                }
            },
                </text>
            }
			{
				data: null,
				render: function (data, type, row) {
                    return '<div class="text-center"><a href="javascript:void(0)" onclick="RemoveUser(' + row.userId + ')" class="btn btn-danger" style="padding:5px; vertical-align: middle;" title="Excluir"><i class="simple-icon-trash"></i></a>';
				}
			}
        ]
	});

    function _UserIndexDoneTyping() {
        if ($.fn.DataTable.isDataTable('#_UserIndexTable')) {
            datatables.search($('#_UserIndexSearch').val()).draw();
        }
    }
    $('#_UserIndexSearch').keyup(function () {
        clearTimeout(_UserIndexDoneTypingInterval);
        _UserIndexTypingTimer = setTimeout(_UserIndexDoneTyping, _UserIndexDoneTypingInterval);
    });
    $('#_UserIndexSearch').keydown(function () {
        clearTimeout(_UserIndexDoneTyping);
    });

    function RemoveUser(id) {
		if (confirm("Deseja realmente excluir este usuário?")) {
            _RemoveUser(id, function () {
                $('#_UserIndexTable').DataTable().ajax.reload();
				alert("Usuário excluído com sucesso!");
			});
		}
	}

    function _RemoveUser(_id, callback) {
        var d = { id: _id};
		$.ajax({
			url: '@Url.Action("RemoveUser", "User")',
			type: 'POST',
			data: d,
			dataType: 'Json',
			success: callback
		});
	}
</script>