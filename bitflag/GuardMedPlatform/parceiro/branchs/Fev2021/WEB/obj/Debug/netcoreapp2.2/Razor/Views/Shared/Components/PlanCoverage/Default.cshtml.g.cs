#pragma checksum "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0543a93e7bf31d9891daf9aed4eafdbcc58513ee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_PlanCoverage_Default), @"mvc.1.0.view", @"/Views/Shared/Components/PlanCoverage/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/Components/PlanCoverage/Default.cshtml", typeof(AspNetCore.Views_Shared_Components_PlanCoverage_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB;

#line default
#line hidden
#line 2 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0543a93e7bf31d9891daf9aed4eafdbcc58513ee", @"/Views/Shared/Components/PlanCoverage/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f1a2867d427831583d00e3f9ae1a2cabe8b362bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_PlanCoverage_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WEB.Models.PlanViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(33, 1507, true);
            WriteLiteral(@"
<div id=""_PlanCoverageAlertError"" class=""alert alert-danger fade show text-center"" role=""alert"" style=""display: none;"">
    <strong>Atenção!</strong> Deve ser preenchido a garantia de todas cobertura que serão utilizadas.
</div>
<div class=""table-wrapper"">
    <table id=""_ProductCoverageIndexTable"" class=""table display responsive nowrap"" style=""border-collapse: collapse !important;"">
        <thead>
            <tr>
                <th>&nbsp;</th>
                <th>Nome</th>
                <th>Taxa (%)</th>
                <th>Mínimo (R$)</th>
                <th>Maximo (R$)</th>
                <th>Básica</th>
                <th>Opcional</th>
                <th>Limite Básico (%)</th>
                <th>Garantia (R$)</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<script type=""text/javascript"">
    var total = 0;
    var index = 1;
    var _ProductCoverageIndexTypingTimer;
    var _ProductCoverageIndexDoneTypingInterval = 500;
    var data");
            WriteLiteral(@"tables = $('#_ProductCoverageIndexTable').DataTable({
        ""order"": [[5, ""desc""]],
        columnDefs: [{
            targets: [5],
            orderData: [5, 6, 1]
        },
        {
            targets: [6],
            ""visible"": false
        }],
		proccessing: true,
		serverSide: false,
		searching: true,
        lengthChange: false,
        bPaginate: false,
        info: false,
        iDisplayLength: 100,
		dom: 'tip',
		ajax: {
            url: '");
            EndContext();
            BeginContext(1541, 38, false);
#line 48 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
             Write(Url.Action("PlanCoverageList", "Plan"));

#line default
#line hidden
            EndContext();
            BeginContext(1579, 69, true);
            WriteLiteral("\',\r\n            data: function (d) {\r\n                d.productId = \'");
            EndContext();
            BeginContext(1649, 15, false);
#line 50 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                          Write(Model.ProductId);

#line default
#line hidden
            EndContext();
            BeginContext(1664, 32, true);
            WriteLiteral("\',\r\n                d.planId = \'");
            EndContext();
            BeginContext(1697, 12, false);
#line 51 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                       Write(Model.PlanId);

#line default
#line hidden
            EndContext();
            BeginContext(1709, 744, true);
            WriteLiteral(@"'
            },
			type: 'POST'
		},
        columns: [
            {
                data: 'IsOptional',
                render: function (data, type, row) {
                    var used = false;
                    if (row.used != null) {
                        used = row.used;
                    }
                    return '<input id=""ProductCoverageId_' + index + '"" value=""' + row.productCoverageId + '"" type=""hidden"" /><div style=""text-align:center;""><input id=""Used_' + index + '"" type=""checkbox"" ' + (!row.isOptional ? 'checked disabled' : used ? 'checked ' : '') + ' /></div>';
                }
            },
			{ data: 'Name',
            render: function (data, type, row) {
                return '<a href=""");
            EndContext();
            BeginContext(2454, 39, false);
#line 68 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                            Write(Url.Action("Manage", "ProductCoverage"));

#line default
#line hidden
            EndContext();
            BeginContext(2493, 3086, true);
            WriteLiteral(@"?id=' + row.productCoverageId  + '"" target=""_blank"">' + row.name + '</a>';
                }
            },
            {
                data: 'Taxes',
            render: function (data, type, row) {
                return '<span class=""percent"">' + row._Taxes + '</span>';
                }
            },
            {
                data: 'Minimum',
                render: function (data, type, row) {
                    return row.minimum != null ? '<span class=""money"">' + row._Minimum + '</span>' : '-';
                }
            },
            {
                data: 'Maximum',
                render: function (data, type, row) {
                    return row.maximum != null ? '<span class=""money"">' + row._Maximum + '</span>' : '-';
                }
            },
            {
                data: 'IsBasic',
                render: function (data, type, row) {
                    return row.isBasic ? '<span class=""badge badge-pill badge-success text-center"">Sim</span>' : ");
            WriteLiteral(@"'<span class=""badge badge-pill badge-danger text-center"">Não</span>';
                }
            },
            {
                data: 'IsOptional',
                render: function (data, type, row) {
                    return !row.isOptional;
                }
            },
            {
                data: 'BasicLimit',
                render: function (data, type, row) {
                    return row.basicLimit != null ? '<span class=""percent"">' + row._BasicLimit + '</span>' : '-';
                }
            },
            {
                data: null,
                render: function (data, type, row) {
                    var r = '<div style=""text-align:center; width:100%;""><input id=""Garantia_' + index + '"" style=""padding: 0.090rem 0.75rem;"" type=""text"" class=""form-control money"" Placeholder=""Garantia de ' + row.name + '"" ' + (row._Garantia != null ? 'value=""' + row._Garantia  + '""' : '') + ' /></div>';

                    index++;
                    return r;
      ");
            WriteLiteral(@"          }
            }
        ],
        initComplete: function (settings, json) {

            total = json.recordsFiltered;

            _MaskData();
        }
    });

    function _PlanCoverageValidacao() {
        var _PlanCoverageHasError = false;
        $('.text-danger').remove();

        for (var i = 1; i <= total; i++) {
            if ($('#Used_' + i)[0].checked && IsNullOrWhiteSpace($('#Garantia_' + i).val())) {
                _PlanCoverageHasError = true;
            }
        }

        if (_PlanCoverageHasError) {
            $('#_PlanCoverageAlertError').show();
        } else {
            $('#_PlanCoverageAlertError').hide();
        }

        return (!_PlanCoverageHasError);
    }

    function _PlanCoverageSave () {
        var model = [];
        for (var i = 1; i <= total; i++) {
            model.push({
                'ProductCoverageId': $('#ProductCoverageId_' + i).val(), 'Used': $('#Used_' + i)[0].checked, '_Garantia': $('#Garantia_' + i).val");
            WriteLiteral("(), \'PlanId\': ");
            EndContext();
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                                                if (Model.PlanId.HasValue) {

#line default
#line hidden
            BeginContext(5614, 1, true);
            WriteLiteral("\'");
            EndContext();
            BeginContext(5616, 12, false);
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                                                                              Write(Model.PlanId);

#line default
#line hidden
            EndContext();
            BeginContext(5628, 1, true);
            WriteLiteral("\'");
            EndContext();
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                                                                                                        }else{

#line default
#line hidden
            BeginContext(5648, 4, true);
            WriteLiteral("null");
            EndContext();
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                                                                                                                               }

#line default
#line hidden
            BeginContext(5660, 193, true);
            WriteLiteral(", \'PlanCoverageId\': null\r\n            });\r\n        }\r\n        if (total == 0) {\r\n            model.push({\r\n                \'ProductCoverageId\': null, \'Used\': null, \'_Garantia\': null, \'PlanId\': ");
            EndContext();
#line 153 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                       if (Model.PlanId.HasValue) {

#line default
#line hidden
            BeginContext(5888, 1, true);
            WriteLiteral("\'");
            EndContext();
            BeginContext(5890, 12, false);
#line 153 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                     Write(Model.PlanId);

#line default
#line hidden
            EndContext();
            BeginContext(5902, 1, true);
            WriteLiteral("\'");
            EndContext();
#line 153 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                               }else{

#line default
#line hidden
            BeginContext(5922, 4, true);
            WriteLiteral("null");
            EndContext();
#line 153 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
                                                                                                                                                                      }

#line default
#line hidden
            BeginContext(5934, 129, true);
            WriteLiteral(", \'PlanCoverageId\': null\r\n            });\r\n        }\r\n        var d = JSON.stringify(model)\r\n        $.ajax({\r\n            url: \'");
            EndContext();
            BeginContext(6064, 38, false);
#line 158 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\PlanCoverage\Default.cshtml"
             Write(Url.Action("PlanCoverageSave", "Plan"));

#line default
#line hidden
            EndContext();
            BeginContext(6102, 406, true);
            WriteLiteral(@"',
            type: 'POST',
            data: d,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                if(data.hasError){
                    alert(data.message);
                    return;
                }
                _PlanCoverageCallBack(data.code);
            }
        });
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WEB.Models.PlanViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
