#pragma checksum "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_CertificateIndex_Default), @"mvc.1.0.view", @"/Views/Shared/Components/CertificateIndex/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/Components/CertificateIndex/Default.cshtml", typeof(AspNetCore.Views_Shared_Components_CertificateIndex_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB;

#line default
#line hidden
#line 2 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
#line 2 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
using WEB.Utils;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c76632a8c1228b6ccbd34575a0c43a95f7cc90e", @"/Views/Shared/Components/CertificateIndex/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f1a2867d427831583d00e3f9ae1a2cabe8b362bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_CertificateIndex_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("font-size:10px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/CertificateModel.xlsx"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("download", new global::Microsoft.AspNetCore.Html.HtmlString("ImportacaoCertificado.xlsx"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
  
    int? userRealEstateAgencyId = null;
    if (ViewData.ContainsKey("UserRealEstateAgencyId"))
    {
        userRealEstateAgencyId = (int)ViewData["UserRealEstateAgencyId"];
    }

#line default
#line hidden
            BeginContext(225, 21, true);
            WriteLiteral("\r\n<div class=\"row\">\r\n");
            EndContext();
#line 12 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (User.IsInRealEstate() || User.IsInRole("Corretor"))
    {

#line default
#line hidden
            BeginContext(315, 96, true);
            WriteLiteral("        <input type=\"hidden\" id=\"_CertificateManageRealEstateAgencyId\" name=\"RealEstateAgencyId\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 411, "\"", 442, 1);
#line 14 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 419, userRealEstateAgencyId, 419, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(443, 5, true);
            WriteLiteral(" />\r\n");
            EndContext();
#line 15 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }
    else
    {

#line default
#line hidden
            BeginContext(472, 173, true);
            WriteLiteral("        <div class=\"col-md-4\">\r\n            <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">");
            EndContext();
            BeginContext(646, 61, false);
#line 21 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                              Write(WEB.Configuration.InsuranceConfiguration.CorretoraDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(707, 168, true);
            WriteLiteral("</span>\r\n                </div>\r\n                <select class=\"form-control\" id=\"_CertificateManageRealEstateAgencyId\" name=\"RealEstateAgencyId\">\r\n                    ");
            EndContext();
            BeginContext(875, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e8420", async() => {
                BeginContext(892, 9, true);
                WriteLiteral("Selecione");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(910, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 25 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                     foreach (var item in (List<DB.Models.Company>)ViewData["RealEstateAgency"])
                    {
                        var companyName = string.IsNullOrWhiteSpace(item.RazaoSocial) ? item.FirstName + " " + item.LastName : item.RazaoSocial;

#line default
#line hidden
            BeginContext(1179, 24, true);
            WriteLiteral("                        ");
            EndContext();
            BeginContext(1203, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e10358", async() => {
                BeginContext(1236, 11, false);
#line 28 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                   Write(companyName);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 28 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                           WriteLiteral(item.CompanyId);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1256, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 29 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                    }

#line default
#line hidden
            BeginContext(1281, 63, true);
            WriteLiteral("                </select>\r\n            </div>\r\n        </div>\r\n");
            EndContext();
#line 33 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(1351, 4, true);
            WriteLiteral("    ");
            EndContext();
#line 34 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (User.IsInRealEstate())
    {

#line default
#line hidden
            BeginContext(1391, 98, true);
            WriteLiteral("        <input id=\"_CertificateManageRealEstateId\" name=\"RealEstateId\" type=\"hidden\" value=\"\" />\r\n");
            EndContext();
#line 37 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }
    else
    {

#line default
#line hidden
            BeginContext(1513, 12, true);
            WriteLiteral("        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 1525, "\"", 1611, 3);
            WriteAttributeValue("", 1533, "form-group", 1533, 10, true);
            WriteAttributeValue(" ", 1543, "col-md-4", 1544, 9, true);
            WriteAttributeValue(" ", 1552, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 40 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                         if (User.IsInRole("Corretor")) {

#line default
#line hidden
                BeginContext(1592, 11, true);
                WriteLiteral("offset-md-2");
                EndContext();
#line 40 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                 }

#line default
#line hidden
                PopWriter();
            }
            ), 1553, 58, false);
            EndWriteAttribute();
            BeginContext(1612, 144, true);
            WriteLiteral(">\r\n            <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">");
            EndContext();
            BeginContext(1757, 59, false);
#line 43 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                              Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(1816, 136, true);
            WriteLiteral("</span>\r\n                </div>\r\n                <select class=\"form-control\" id=\"_CertificateManageRealEstateId\">\r\n                    ");
            EndContext();
            BeginContext(1952, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e15801", async() => {
                BeginContext(1969, 23, true);
                WriteLiteral("Selecione uma corretora");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2001, 65, true);
            WriteLiteral("\r\n                </select>\r\n            </div>\r\n        </div>\r\n");
            EndContext();
#line 50 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(2073, 304, true);
            WriteLiteral(@"    <div class=""form-group col-md-4"">
        <div class=""input-group"">
            <div class=""input-group-prepend"">
                <span class=""input-group-text"">Produto</span>
            </div>
            <select class=""form-control"" id=""_CertificateManageInsurancePolicyId"">
                ");
            EndContext();
            BeginContext(2377, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e17861", async() => {
                BeginContext(2394, 23, true);
                WriteLiteral("Selecione uma corretora");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2426, 53, true);
            WriteLiteral("\r\n            </select>\r\n        </div>\r\n    </div>\r\n");
            EndContext();
#line 61 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (User.IsInRealEstate())
    {

#line default
#line hidden
            BeginContext(2519, 992, true);
            WriteLiteral(@"        <div class=""form-group col-md-3"">
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Data Início</span>
                </div>
                <input type=""text"" class=""form-control date"" id=""_CertificateManageStartDate"" placeholder=""Data Início"">
            </div>
        </div>
        <div class=""form-group col-md-3"">
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Data Fim</span>
                </div>
                <input type=""text"" class=""form-control date"" id=""_CertificateManageEndDate"" placeholder=""Data Fim"" />
            </div>
        </div>
        <div class=""form-group col-md-2"">
            <button type=""button"" class=""btn btn-primary"" style=""width: 100%;"" id=""_CertificateIndexFilterButton""><i class=""fas fa-filter""></i>&nbsp;Filtrar</button>
        </div>
");
            EndContext();
#line 82 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(3518, 10, true);
            WriteLiteral("</div>\r\n\r\n");
            EndContext();
#line 85 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
 if (!User.IsInRealEstate())
{

#line default
#line hidden
            BeginContext(3561, 25, true);
            WriteLiteral("    <div class=\"row\">\r\n\r\n");
            EndContext();
#line 89 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
         if (Model == (int)WEB.Utils.CertificateTypes.Deletados)
        {

#line default
#line hidden
            BeginContext(3663, 348, true);
            WriteLiteral(@"            <div class=""form-group col-md-3"">
                <div class=""input-group"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"">Motivo</span>
                    </div>
                    <select class=""form-control"" id=""_CertificateManageMotivo"">
                        ");
            EndContext();
            BeginContext(4011, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e21996", async() => {
                BeginContext(4029, 9, true);
                WriteLiteral("Cancelado");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4047, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(4073, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e23401", async() => {
                BeginContext(4091, 9, true);
                WriteLiteral("Encerrado");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4109, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(4135, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e24806", async() => {
                BeginContext(4153, 13, true);
                WriteLiteral("Não Renovados");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4175, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(4201, 31, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e26216", async() => {
                BeginContext(4218, 5, true);
                WriteLiteral("Todos");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4232, 77, true);
            WriteLiteral("\r\n                    </select>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
#line 104 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(4345, 67, true);
            WriteLiteral("            <input type=\"hidden\" id=\"_CertificateManageMotivo\" />\r\n");
            EndContext();
#line 108 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
        }

#line default
#line hidden
            BeginContext(4423, 12, true);
            WriteLiteral("        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4435, "\"", 4553, 3);
            WriteAttributeValue("", 4443, "form-group", 4443, 10, true);
            WriteAttributeValue(" ", 4453, "col-md-", 4454, 8, true);
            WriteAttributeValue("", 4461, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 109 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                       if (Model == (int)WEB.Utils.CertificateTypes.Deletados){

#line default
#line hidden
                BeginContext(4524, 1, true);
                WriteLiteral("3");
                EndContext();
#line 109 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                             }else{

#line default
#line hidden
                BeginContext(4544, 1, true);
                WriteLiteral("4");
                EndContext();
#line 109 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                 }

#line default
#line hidden
                PopWriter();
            }
            ), 4461, 92, false);
            EndWriteAttribute();
            BeginContext(4554, 358, true);
            WriteLiteral(@">
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Data Início</span>
                </div>
                <input type=""text"" class=""form-control date"" id=""_CertificateManageStartDate"" placeholder=""Data Início"">
            </div>
        </div>
        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4912, "\"", 5030, 3);
            WriteAttributeValue("", 4920, "form-group", 4920, 10, true);
            WriteAttributeValue(" ", 4930, "col-md-", 4931, 8, true);
            WriteAttributeValue("", 4938, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 117 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                       if (Model == (int)WEB.Utils.CertificateTypes.Deletados){

#line default
#line hidden
                BeginContext(5001, 1, true);
                WriteLiteral("3");
                EndContext();
#line 117 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                             }else{

#line default
#line hidden
                BeginContext(5021, 1, true);
                WriteLiteral("4");
                EndContext();
#line 117 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                 }

#line default
#line hidden
                PopWriter();
            }
            ), 4938, 92, false);
            EndWriteAttribute();
            BeginContext(5031, 352, true);
            WriteLiteral(@">
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Data Fim</span>
                </div>
                <input type=""text"" class=""form-control date"" id=""_CertificateManageEndDate"" placeholder=""Data Fim"" />
            </div>
        </div>
        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 5383, "\"", 5501, 3);
            WriteAttributeValue("", 5391, "form-group", 5391, 10, true);
            WriteAttributeValue(" ", 5401, "col-md-", 5402, 8, true);
            WriteAttributeValue("", 5409, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 125 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                       if (Model == (int)WEB.Utils.CertificateTypes.Deletados){

#line default
#line hidden
                BeginContext(5472, 1, true);
                WriteLiteral("3");
                EndContext();
#line 125 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                             }else{

#line default
#line hidden
                BeginContext(5492, 1, true);
                WriteLiteral("4");
                EndContext();
#line 125 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                 }

#line default
#line hidden
                PopWriter();
            }
            ), 5409, 92, false);
            EndWriteAttribute();
            BeginContext(5502, 198, true);
            WriteLiteral(">\r\n            <button type=\"button\" class=\"btn btn-primary\" style=\"width: 100%;\" id=\"_CertificateIndexFilterButton\"><i class=\"fas fa-filter\"></i>&nbsp;Filtrar</button>\r\n        </div>\r\n    </div>\r\n");
            EndContext();
#line 129 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
}

#line default
#line hidden
            BeginContext(5703, 27, true);
            WriteLiteral("<div class=\"row\">\r\n    <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 5730, "\"", 6191, 2);
            WriteAttributeValue("", 5738, "col-md-", 5738, 7, true);
            WriteAttributeValue("", 5745, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 131 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                        if (User.IsInRole("Administrator")){
        if (Model == (int)WEB.Utils.CertificateTypes.Deletados || Model == (int)WEB.Utils.CertificateTypes.Emitidos){

#line default
#line hidden
                BeginContext(5907, 2, true);
                WriteLiteral("12");
                EndContext();
#line 132 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                    }
        else {

#line default
#line hidden
                BeginContext(5939, 1, true);
                WriteLiteral("8");
                EndContext();
#line 133 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                            }}
        else {
        if (User.IsInRealEstate() && Model == (int)WEB.Utils.CertificateTypes.Simulacao){

#line default
#line hidden
                BeginContext(6062, 2, true);
                WriteLiteral("10");
                EndContext();
#line 135 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                        }
        else if (Model == (int)WEB.Utils.CertificateTypes.Simulacao){

#line default
#line hidden
                BeginContext(6149, 1, true);
                WriteLiteral("8");
                EndContext();
#line 136 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                   }
        else {

#line default
#line hidden
                BeginContext(6180, 2, true);
                WriteLiteral("12");
                EndContext();
#line 137 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                             }}

#line default
#line hidden
                PopWriter();
            }
            ), 5745, 446, false);
            EndWriteAttribute();
            BeginContext(6192, 330, true);
            WriteLiteral(@">
        <div class=""input-group"">
            <div class=""input-group-prepend"">
                <span class=""input-group-text""><i class=""fa fa-search""></i></span>
            </div>
            <input id=""_CertificateIndexSearch"" type=""text"" class=""form-control"" placeholder=""Procurar..."" />
        </div>
    </div>

");
            EndContext();
#line 146 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (User.IsInRole("Administrator") && (Model == (int)WEB.Utils.CertificateTypes.Simulacao || Model == (int)WEB.Utils.CertificateTypes.Renovacao))
    {

#line default
#line hidden
            BeginContext(6681, 12, true);
            WriteLiteral("        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 6693, "\"", 6800, 2);
            WriteAttributeValue("", 6701, "col-md-", 6701, 7, true);
            WriteAttributeValue("", 6708, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                            if (Model == (int)WEB.Utils.CertificateTypes.Simulacao){

#line default
#line hidden
                BeginContext(6771, 1, true);
                WriteLiteral("2");
                EndContext();
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                  }else{

#line default
#line hidden
                BeginContext(6791, 1, true);
                WriteLiteral("4");
                EndContext();
#line 148 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                      }

#line default
#line hidden
                PopWriter();
            }
            ), 6708, 92, false);
            EndWriteAttribute();
            BeginContext(6801, 212, true);
            WriteLiteral(">\r\n            <a href=\"javascript:void(0)\" class=\"btn btn-primary pull-right w-100\" data-target=\"#ImportCertificateModal\" data-toggle=\"modal\"><i class=\"fas fa-file-excel\"></i>&nbsp;Importar</a>\r\n        </div>\r\n");
            EndContext();
#line 151 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(7020, 4, true);
            WriteLiteral("    ");
            EndContext();
#line 152 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (Model == (int)WEB.Utils.CertificateTypes.Simulacao)
    {

#line default
#line hidden
            BeginContext(7089, 12, true);
            WriteLiteral("        <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 7101, "\"", 7235, 2);
            WriteAttributeValue("", 7109, "col-md-", 7109, 7, true);
            WriteAttributeValue("", 7116, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                PushWriter(__razor_attribute_value_writer);
#line 154 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                            if (User.IsInRole("Administrator")){

#line default
#line hidden
                BeginContext(7159, 1, true);
                WriteLiteral("2");
                EndContext();
#line 154 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                              }else if(User.IsInRealEstate()) {

#line default
#line hidden
                BeginContext(7206, 1, true);
                WriteLiteral("2");
                EndContext();
#line 154 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                             }else{

#line default
#line hidden
                BeginContext(7226, 1, true);
                WriteLiteral("4");
                EndContext();
#line 154 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                                 }

#line default
#line hidden
                PopWriter();
            }
            ), 7116, 119, false);
            EndWriteAttribute();
            BeginContext(7236, 17, true);
            WriteLiteral(">\r\n            <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 7253, "\"", 7319, 3);
#line 155 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 7260, Url.Action("Manage", "Certificate"), 7260, 36, false);

#line default
#line hidden
            WriteAttributeValue("", 7296, "?certificateType=", 7296, 17, true);
#line 155 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 7313, Model, 7313, 6, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7320, 108, true);
            WriteLiteral(" class=\"btn btn-success pull-right w-100\"><i class=\"fas fa-plus-circle\"></i>&nbsp;Novo</a>\r\n        </div>\r\n");
            EndContext();
#line 157 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
    }

#line default
#line hidden
            BeginContext(7435, 8, true);
            WriteLiteral("</div>\r\n");
            EndContext();
#line 159 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
 if (Model == (int)WEB.Utils.CertificateTypes.Renovacao)
{

#line default
#line hidden
            BeginContext(7504, 265, true);
            WriteLiteral(@"    <div class=""row"" style=""margin-top: 2em;"">
        <div class=""col-md-12"">
            <label>Abaixo seguem propostas de renovações dos certificados vencidos. Para renovar conforme proposta abaixo basta clicar em Renovar.</label>
        </div>
    </div>
");
            EndContext();
#line 166 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
}

#line default
#line hidden
            BeginContext(7772, 528, true);
            WriteLiteral(@"<div class=""table-wrapper"" style=""margin-top:1em;"">
    <table id=""_CertificateIndexTable"" class=""table display responsive"" style=""border-collapse: collapse !important; width: 100%;"">
        <thead>
            <tr>
                <th>Data de Criação</th>
                <th>Endereço</th>
                <th>Num.</th>
                <th>Início da Vigência</th>
                <th>Fim da Vigência</th>
                <th>Data de Cancelamento</th>
                <th>Cancelado Por</th>
                <th>Ref. ");
            EndContext();
            BeginContext(8301, 59, false);
#line 178 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                    Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(8360, 71, true);
            WriteLiteral("</th>\r\n                <th>&nbsp;</th>\r\n                <th>Ref.</th>\r\n");
            EndContext();
#line 181 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model == (int)WEB.Utils.CertificateTypes.Emitidos)
                {

#line default
#line hidden
            BeginContext(8523, 77, true);
            WriteLiteral("                    <th>Origem</th>\r\n                    <th>Contração</th>\r\n");
            EndContext();
#line 185 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(8619, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 186 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model == (int)WEB.Utils.CertificateTypes.Deletados)
                {

#line default
#line hidden
            BeginContext(8712, 37, true);
            WriteLiteral("                    <th>Motivo</th>\r\n");
            EndContext();
#line 189 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(8768, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 190 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model == (int)WEB.Utils.CertificateTypes.Simulacao)
                {

#line default
#line hidden
            BeginContext(8861, 42, true);
            WriteLiteral("                    <th>Notificação</th>\r\n");
            EndContext();
#line 193 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(8922, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 194 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (User.IsInRole("Administrator") || User.IsInRole("Corretor"))
                {

#line default
#line hidden
            BeginContext(9024, 24, true);
            WriteLiteral("                    <th>");
            EndContext();
            BeginContext(9049, 59, false);
#line 196 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(9108, 7, true);
            WriteLiteral("</th>\r\n");
            EndContext();
#line 197 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(9134, 313, true);
            WriteLiteral(@"                <th>Produto</th>
                <th>Valor do<br />Seguro (R$)<br /><small class=""text-nowrap""><span class=""money"" id=""totalValorSeguro""></span></small></th>
                <th>Valor<br />Total (R$)<br /><small class=""text-nowrap""><span class=""money"" id=""totalValorTotal""></span></small></th>
");
            EndContext();
#line 201 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model == (int)WEB.Utils.CertificateTypes.Simulacao)
                {

#line default
#line hidden
            BeginContext(9540, 73, true);
            WriteLiteral("                    <th>Prazo</th>\r\n                    <th>Status</th>\r\n");
            EndContext();
#line 205 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(9632, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 206 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model == (int)WEB.Utils.CertificateTypes.Renovacao)
                {

#line default
#line hidden
            BeginContext(9725, 37, true);
            WriteLiteral("                    <th>Status</th>\r\n");
            EndContext();
#line 209 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(9781, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 210 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model != (int)WEB.Utils.CertificateTypes.Simulacao)
                {

#line default
#line hidden
            BeginContext(9874, 59, true);
            WriteLiteral("                    <th id=\"ApprovedColumn\">Aprovado</th>\r\n");
            EndContext();
#line 213 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(9952, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 214 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 if (Model != (int)WEB.Utils.CertificateTypes.Deletados)
                {

#line default
#line hidden
            BeginContext(10045, 37, true);
            WriteLiteral("                    <th>&nbsp;</th>\r\n");
            EndContext();
#line 217 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                }

#line default
#line hidden
            BeginContext(10101, 215, true);
            WriteLiteral("            </tr>\r\n        </thead>\r\n        <tbody></tbody>\r\n    </table>\r\n</div>\r\n<script type=\"text/javascript\">\r\n    var renovationType = false, removedType = false, issuedType = false, simulationType = false;\r\n");
            EndContext();
#line 225 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (Model == (int)WEB.Utils.CertificateTypes.Renovacao) { 

#line default
#line hidden
            BeginContext(10385, 24, true);
            WriteLiteral(" renovationType = true; ");
            EndContext();
#line 225 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                     }

#line default
#line hidden
            BeginContext(10420, 4, true);
            WriteLiteral("    ");
            EndContext();
#line 226 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (Model == (int)WEB.Utils.CertificateTypes.Deletados) { 

#line default
#line hidden
            BeginContext(10489, 21, true);
            WriteLiteral(" removedType = true; ");
            EndContext();
#line 226 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                  }

#line default
#line hidden
            BeginContext(10521, 4, true);
            WriteLiteral("    ");
            EndContext();
#line 227 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (Model == (int)WEB.Utils.CertificateTypes.Emitidos) { 

#line default
#line hidden
            BeginContext(10589, 20, true);
            WriteLiteral(" issuedType = true; ");
            EndContext();
#line 227 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                }

#line default
#line hidden
            BeginContext(10620, 4, true);
            WriteLiteral("    ");
            EndContext();
#line 228 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (Model == (int)WEB.Utils.CertificateTypes.Simulacao) { 

#line default
#line hidden
            BeginContext(10689, 24, true);
            WriteLiteral(" simulationType = true; ");
            EndContext();
#line 228 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                     }

#line default
#line hidden
            BeginContext(10724, 2182, true);
            WriteLiteral(@"
    var _CertificateIndexDateTypingTimer;
    var _CertificateIndexTypingTimer;
    var _CertificateIndexDateDoneTypingInterval = 500;
    var _CertificateIndexDoneTypingInterval = 500;

    function format(d) {
        var monthlyPrice = (d._MonthlyPrice == null ? '-' : '<span class=""money"">' + d._MonthlyPrice + '</span>');
        var paymentTimes = (d.paymentTimes == null ? '-' : d.paymentTimes);
        var contractionDate = (d.copiedBy != null ? '<span class=""_date"">' + d._VigencyDate + '</span>' : (IsNullOrWhiteSpace(d._AdherenceDate) ? '-' : '<span class=""_date"">' + d._AdherenceDate + '</span>'));
        var endVigency = (IsNullOrWhiteSpace(d._DeletedDate) ? (IsNullOrWhiteSpace(d._EndVigencyDate) ? '-' : '<span class=""_date"">' + d._EndVigencyDate + '</span>') : '<span class=""_date"">' + d._DeletedDate + '</span>');
        var deletedInfo = (d.copiedBy == null ? (d.deletedBy != null ? ' | <strong>Cancelado por: </strong>' + d.nameDeletedBy : '') : '');
        var renewInfo = (d.copiedBy !");
            WriteLiteral(@"= null ? ' | <strong>Renovado por: </strong>' + d.nameDeletedBy : (!IsNullOrWhiteSpace(d.nameRenewBy) ? ' | <strong>Renovado por: </strong>' + d.nameRenewBy : ''));
        var realEstateRef = (d.realEstateReference == null ? '-' : d.realEstateReference);

        var table = '<table cellpadding=""7"" cellspacing=""0"" border=""0"" style=""padding-left:50px; width:100%;"">';
        table +=
            '<tr>' +
                '<td><span><strong>Endereço:</strong>&nbsp;' + d.endereco + ', <strong>nº</strong>&nbsp;' + d.numero + '</span></td>' +
            '</tr>';

        table +=
            '<tr>' +
                '<td><span><strong>Plano:</strong>&nbsp;' + d.planName + ' | <strong>Valor das Parcelas:</strong>&nbsp;R$&nbsp;' + monthlyPrice + ' | <strong>Parcelamento:</strong>&nbsp;' + paymentTimes + 'x</span></td>' +
            '</tr>';

        table +=
            '<tr>' +
                '<td><span><strong>Início de Vigência:</strong>&nbsp;' + (IsNullOrWhiteSpace(d._VigencyDate) ? '-' : '<sp");
            WriteLiteral("an class=\"_date\">\' + d._VigencyDate + \'</span>\') + \' | <strong>Fim da Vigência:</strong>&nbsp;\' + endVigency + \' | <strong>Referência ");
            EndContext();
            BeginContext(12907, 59, false);
#line 257 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                                                                                                                                                          Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(12966, 88, true);
            WriteLiteral(":</strong>&nbsp;\' + realEstateRef + \'</span></td>\' +\r\n            \'</tr>\';\r\n\r\n        \r\n");
            EndContext();
#line 261 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
         if(Model == (int)WEB.Utils.CertificateTypes.Deletados)
        {
        

#line default
#line hidden
            BeginContext(13144, 381, true);
            WriteLiteral(@"
            if (d.copiedBy != null || (d.copiedBy == null && !d.isDeleted)) {
                table += '<tr>' +
                    '<td><span><strong>Renovado:</strong>&nbsp;' + (d.copiedBy != null ? 'Sim - Nova referência: ' + (IsNullOrWhiteSpace(d.copiedByReference) ? '-' : d.copiedByReference) : 'Não') + '</span></td>' +
                '</tr>';
            }
        ");
            EndContext();
#line 269 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
        }

#line default
#line hidden
            BeginContext(13545, 392, true);
            WriteLiteral(@"
        table +=
            '<tr>' +
            ""<td><a href='javascript: OpenAuditLogModal("" + JSON.stringify({ certificateId: d.certificateId, reference: d.reference }) + "")' class='fas fa-list-alt' style='font-size: 16px !important;' data-toggle='tooltip' title='Histórico'></a></td>"" +
            '</tr>';
        '</table>';

        return table;
    }


    var i = 0;
");
            EndContext();
#line 283 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (User.IsInRole("Administrator") || User.IsInRole("Corretor")) {

#line default
#line hidden
            BeginContext(14014, 18, true);
            WriteLiteral("\r\n    i = 1;\r\n    ");
            EndContext();
#line 285 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
           }

#line default
#line hidden
            BeginContext(14042, 65, true);
            WriteLiteral("\r\n    var datatables = $(\'#_CertificateIndexTable\').DataTable({\r\n");
            EndContext();
#line 288 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
         if (Model == (int)WEB.Utils.CertificateTypes.Simulacao)
        {
        

#line default
#line hidden
            BeginContext(14198, 44, true);
            WriteLiteral("\r\n        \"order\": [[10, \"desc\"]],\r\n        ");
            EndContext();
#line 292 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
        }else if (Model == (int)WEB.Utils.CertificateTypes.Emitidos)
        {
        

#line default
#line hidden
            BeginContext(14346, 44, true);
            WriteLiteral("\r\n        \"order\": [[11, \"desc\"]],\r\n        ");
            EndContext();
#line 297 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
        }else if (Model == (int)WEB.Utils.CertificateTypes.Deletados)
        {
        

#line default
#line hidden
            BeginContext(14495, 43, true);
            WriteLiteral("\r\n        \"order\": [[5, \"desc\"]],\r\n        ");
            EndContext();
#line 302 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
        }
        else if (Model == (int)WEB.Utils.CertificateTypes.Renovacao)
        {
        

#line default
#line hidden
            BeginContext(14653, 43, true);
            WriteLiteral("\r\n        \"order\": [[9, \"desc\"]],\r\n        ");
            EndContext();
#line 308 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
        }

#line default
#line hidden
            BeginContext(14716, 328, true);
            WriteLiteral(@"        ""columnDefs"": [
            {
                ""targets"": [0,1,2,3,4,5,6,7],
                ""visible"": false,
            },
        ],
       

        proccessing: true,
        serverSide: true,
        searching: true,
        lengthChange: false,
        dom: 'tip',
        ajax: {
            url: '");
            EndContext();
            BeginContext(15045, 33, false);
#line 324 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             Write(Url.Action("List", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(15078, 75, true);
            WriteLiteral("\',\r\n            data: function (d) {\r\n                d.certificateType = \"");
            EndContext();
            BeginContext(15154, 5, false);
#line 326 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(15159, 2574, true);
            WriteLiteral(@"""
                d.realEstateAgencyId = $('#_CertificateManageRealEstateAgencyId').val(),
                d.realEstateId = $('#_CertificateManageRealEstateId').val(),
                d.insurancePolicyId = $('#_CertificateManageInsurancePolicyId').val(),
                d.startDate = $('#_CertificateManageStartDate').val(),
                d.endDate = $('#_CertificateManageEndDate').val(),
                d.motivo = $('#_CertificateManageMotivo').val()
            },
            type: 'POST'
        },
        columns: [
            {
                data: 'CreatedDate',
                render: function (data, type, row) {
                    return row._CreatedDate;
                }
            },
            {
                data: 'Endereco',
                render: function (data, type, row) {
                    return row.endereco;
                }
            },
            {
                data: 'Numero',
                render: function (data, type, row) {
               ");
            WriteLiteral(@"     return row.numero;
                }
            },
            {
                data: 'VigencyDate',
                render: function (data, type, row) {
                    return row._VigencyDate;
                }
            },
            {
                data: 'EndVigencyDate',
                render: function (data, type, row) {
                    return row._EndVigencyDate;
                }
            },
            {
                data: 'DeletedDate',
                render: function (data, type, row) {
                    return row._DeletedDate;
                }
            },
            {
                data: 'RealEstateReference',
                render: function (data, type, row) {
                    return row.realEstateReference;
                }
            },
            {
                data: 'NameDeletedBy',
                render: function (data, type, row) {
                    return row.nameDeletedBy;
                }
            },
");
            WriteLiteral(@"            {
                ""className"": 'details-control align-middle',
                ""orderable"": false,
                ""data"": null,
                render: function (data, type, row) {
                    return '<div class=""text-center""><i style=""cursor:pointer;font-size:1.2em;"" class=""fas fa-plus-circle text-primary""></i></div>';
                }
            },
            {
                data: 'Reference',
                render: function (data, type, row) {
                    return '<a href=""");
            EndContext();
            BeginContext(17734, 35, false);
#line 396 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                Write(Url.Action("Manage", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(17769, 49, true);
            WriteLiteral("?reference=\' + row.reference + \'&certificateType=");
            EndContext();
            BeginContext(17819, 5, false);
#line 396 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                     Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(17824, 83, true);
            WriteLiteral("\">\' + row.reference + \'</a>\'; //11 (indice 10)\r\n                }\r\n            },\r\n");
            EndContext();
#line 399 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Emitidos)
            {
            

#line default
#line hidden
            BeginContext(18009, 461, true);
            WriteLiteral(@"
            {
                data: '',
                render: function (data, type, row) {
                    return row.copiedFrom != null ? '<span>Renovação</span>' : '<span>Novo</span>';
                }
            },
            {
                data: 'AdherenceDate',
                render: function (data, type, row) {
                    return '<span>' + row._AdherenceDate + '</span>';
                }
            },
            ");
            EndContext();
#line 414 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(18494, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 416 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Deletados)
            {
            

#line default
#line hidden
            BeginContext(18597, 300, true);
            WriteLiteral(@"
            {
                data: '',
                render: function (data, type, row) {
                    return row.copiedBy != null ? '<span>Encerrado</span>' : (row.isDeleted ? '<span>Cancelamento</span>' : '<span>Não Renovado</span>');
                }
            },
            ");
            EndContext();
#line 425 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(18921, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 427 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Simulacao)
            {
            

#line default
#line hidden
            BeginContext(19024, 225, true);
            WriteLiteral("\r\n            {\r\n                data: \'CreatedDate\',\r\n                render: function (data, type, row) {\r\n                    return \'<span>\' + row._CreatedDate + \'</span>\';\r\n                }\r\n            },\r\n            ");
            EndContext();
#line 436 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(19273, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 438 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (User.IsInRole("Administrator") || User.IsInRole("Corretor"))
            {
            

#line default
#line hidden
            BeginContext(19385, 230, true);
            WriteLiteral("\r\n            {\r\n                data: \'RealEstateName\',\r\n                render: function (data, type, row) {\r\n                    return \'<span>\' + row.realEstateName + \'</span>\';\r\n                }\r\n            },\r\n            ");
            EndContext();
#line 447 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(19639, 1601, true);
            WriteLiteral(@"            {
                data: 'ProductName',
                render: function (data, type, row) {
                    return '<span>' + row.productName + '</span>'; //12
                }
            },
			{
                data: 'RenterName',
                render: function (data, type, row) {
                    var _class = (row.renterCpf.length > 11? 'cnpj' : 'cpf');
                    return '<span>' + row.renterName + '</span>' + '<br/><span class=""' + _class + '"">' + row.renterCpf + '<span>';
                    }
                },
            {
                data: 'LocatorName',
                render: function (data, type, row) {
                    var _class = (row.locatorCpf.length > 11? 'cnpj' : 'cpf');
                    return '<span>' + row.locatorName + '</span>' + '<br/><span class=""' + _class + '"">' + row.locatorCpf + '<span>';
                }
            },
            {
                data: 'PlanAssistancePrice',
                render: function (data,");
            WriteLiteral(@" type, row) {
                    return '<span class=""money"">' + row._PlanAssistancePrice + '</span>';
                }
            },
            {
                data: 'Taxes',
                render: function (data, type, row) {
                    return '<span class=""money"">' + row._Taxes + '</span>';
                }
            },
            {
                data: 'TotalPrice',
                render: function (data, type, row) {
                    return '<span class=""money"">' + row._TotalPrice + '</span>';
                }
            },
");
            EndContext();
#line 487 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Simulacao) { 

#line default
#line hidden
            BeginContext(21317, 699, true);
            WriteLiteral(@"
            {
                data: 'SimulationTermDate',
                render: function (data, type, row) {
                    return '<span>' + row._SimulationTermDate + '</span>';
                }
            },
            {
                data: 'SimlationTermDatePassed',
                render: function (data, type, row) {
                    return !row.simlationTermDatePassed ? (row.isApproved ? '<span class=""badge badge-pill badge-success text-center"">Prazo</span>' : '<span class=""badge badge-pill badge-danger text-center"">Bloqueado</span>' ) : '<span class=""badge badge-pill badge-warning text-center"">Pendente</span>';
                }
            },
            ");
            EndContext();
#line 500 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                    }

#line default
#line hidden
            BeginContext(22027, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 501 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Renovacao)
            {
            

#line default
#line hidden
            BeginContext(22130, 379, true);
            WriteLiteral(@"
            {
                data: '',
                render: function (data, type, row) {
                    return (row.copiedFrom == null || row.isInTimeToRenovate) ? '<span class=""badge badge-pill badge-warning text-center"">Pendente</span>' : '<span class=""badge badge-pill badge-success text-center"">Renovado</span>';
                }
            },
            ");
            EndContext();
#line 510 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(22533, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 512 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model != (int)WEB.Utils.CertificateTypes.Simulacao) { 

#line default
#line hidden
            BeginContext(22610, 342, true);
            WriteLiteral(@"
            {
                data: 'IsApproved',
                render: function (data, type, row) {
                    return row.isApproved ? '<span class=""badge badge-pill badge-success text-center"">Sim</span>' : '<span class=""badge badge-pill badge-danger text-center"">Não</span>';
                }
            },
            ");
            EndContext();
#line 519 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                    }

#line default
#line hidden
            BeginContext(22963, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 520 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model != (int)WEB.Utils.CertificateTypes.Deletados)
            {
            

#line default
#line hidden
            BeginContext(23066, 124, true);
            WriteLiteral("\r\n\t\t\t{\r\n\t\t\t\tdata: null,\r\n                render: function (data, type, row) {\r\n                    var canApprove = false;\r\n");
            EndContext();
#line 527 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                     if (User.IsInRole("Administrator")) { 

#line default
#line hidden
            BeginContext(23255, 41, true);
            WriteLiteral(" if (!row.isApproved) canApprove = true; ");
            EndContext();
#line 527 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                                  }

#line default
#line hidden
            BeginContext(23307, 247, true);
            WriteLiteral("\r\n                    var r = \'<div class=\"text-center\" style=\"white-space: nowrap;\">\';\r\n\r\n                    if (issuedType || (renovationType && row.copiedFrom != null && !row.isInTimeToRenovate)) {\r\n                        r += \'&nbsp;&nbsp;<a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 23554, "\"", 23627, 6);
#line 532 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 23561, Url.Action("Print","Certificate"), 23561, 34, false);

#line default
#line hidden
            WriteAttributeValue("", 23595, "?reference=\'", 23595, 12, true);
            WriteAttributeValue(" ", 23607, "+", 23608, 2, true);
            WriteAttributeValue(" ", 23609, "row.reference", 23610, 14, true);
            WriteAttributeValue(" ", 23623, "+", 23624, 2, true);
            WriteAttributeValue(" ", 23625, "\'", 23626, 2, true);
            EndWriteAttribute();
            BeginContext(23628, 168, true);
            WriteLiteral(" target=\"_blank\" title=\"Impressão\" style=\"font-size: 12px !important;\"><i class=\"fas fa-print amaisimob-orange\"></i></a>\';\r\n                        r += \'&nbsp;&nbsp;<a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 23796, "\"", 23879, 6);
#line 533 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 23803, Url.Action("InquilinoPrint", "Certificate"), 23803, 44, false);

#line default
#line hidden
            WriteAttributeValue("", 23847, "?reference=\'", 23847, 12, true);
            WriteAttributeValue(" ", 23859, "+", 23860, 2, true);
            WriteAttributeValue(" ", 23861, "row.reference", 23862, 14, true);
            WriteAttributeValue(" ", 23875, "+", 23876, 2, true);
            WriteAttributeValue(" ", 23877, "\'", 23878, 2, true);
            EndWriteAttribute();
            BeginContext(23880, 1024, true);
            WriteLiteral(@" target=""_blank"" title=""Impressão Inquilino"" style=""font-size: 12px !important;""><i class=""fas fa-print amaisimob-green""></i></a>';
                    }
                    if (renovationType && (row.copiedFrom == null || row.isInTimeToRenovate)) {
                        r += ""&nbsp;&nbsp;<a href='javascript:void(0)' onclick='Renew("" + row.certificateId + "")' title='Renovar'><i class='fa fa-cloud-upload-alt'></i></a>"";
                    }
                    if (canApprove) {
                        r += ""&nbsp;&nbsp;<a href='javascript:void(0)' onclick='Approve("" + row.certificateId + "")' title='Desbloquear'><i class='fas fa-unlock-alt'></i></a>"";
                    }
                    if (simulationType) {
                        if (row.isApproved) {
                            r += '&nbsp;&nbsp;<a href=""javascript:void(0)"" onclick=""Adherence(' + row.certificateId + ')"" title=""Aderir""><i class=""fa fa-check""></i></a>';
                        }
                        r += '&nbsp;&nbsp;<a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 24904, "\"", 24983, 6);
#line 545 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
WriteAttributeValue("", 24911, Url.Action("SavedPrint", "Certificate"), 24911, 40, false);

#line default
#line hidden
            WriteAttributeValue("", 24951, "?reference=\'", 24951, 12, true);
            WriteAttributeValue(" ", 24963, "+", 24964, 2, true);
            WriteAttributeValue(" ", 24965, "row.reference", 24966, 14, true);
            WriteAttributeValue(" ", 24979, "+", 24980, 2, true);
            WriteAttributeValue(" ", 24981, "\'", 24982, 2, true);
            EndWriteAttribute();
            BeginContext(24984, 605, true);
            WriteLiteral(@" target=""_blank"" title=""Impressão"" style=""font-size: 12px !important;""><i class=""fa fa-print amaisimob-green""></i></a>';
                    }
                    if (issuedType || renovationType || simulationType) {
                        r += '&nbsp;&nbsp;&nbsp;&nbsp;<a href=""javascript:void(0)"" onclick=""RemoveCertificate(' + row.certificateId + ')"" title=""Excluir"" style=""font-size: 12px !important;""><i class=""far fa-trash-alt"" style=""color:red;""></i></a>';
                    }
                    r += '</div>';
                    return r;
                }
            }
            ");
            EndContext();
#line 554 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                   
            }

#line default
#line hidden
            BeginContext(25613, 112, true);
            WriteLiteral("        ],\r\n        \'drawCallback\': function (settings) {\r\n            var datas = this.api().rows().data();\r\n\r\n");
            EndContext();
#line 560 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             if (Model == (int)WEB.Utils.CertificateTypes.Emitidos)
            {
                

#line default
#line hidden
            BeginContext(25831, 415, true);
            WriteLiteral(@"
                var allApproved = true;
                for (var i = 0; i < datas.length; i++){
                    if(!datas[i].isApproved){
                        allApproved = false;
                        break;
                    }
                }

                if(allApproved){
                    datatables.column($('#ApprovedColumn')).visible(false);
                }
                ");
            EndContext();
#line 574 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                       
            }

#line default
#line hidden
            BeginContext(26270, 120, true);
            WriteLiteral("\r\n            GetTotalPriceHeaders();\r\n\r\n        }\r\n    });\r\n\r\n    function GetTotalPriceHeaders() {\r\n\r\n        $.post(\'");
            EndContext();
            BeginContext(26391, 33, false);
#line 584 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
           Write(Url.Action("List", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(26424, 53, true);
            WriteLiteral("\',\r\n            {\r\n                certificateType: \"");
            EndContext();
            BeginContext(26478, 5, false);
#line 586 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                             Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(26483, 2706, true);
            WriteLiteral(@""",
                realEstateAgencyId: $('#_CertificateManageRealEstateAgencyId').val(),
                realEstateId: $('#_CertificateManageRealEstateId').val(),
                insurancePolicyId: $('#_CertificateManageInsurancePolicyId').val(),
                startDate: $('#_CertificateManageStartDate').val(),
                endDate: $('#_CertificateManageEndDate').val(),
                motivo: $('#_CertificateManageMotivo').val()
            },
            function (d) {
                var totalValorSeguro = 0;
                var totalTaxa = 0;
                var totalValor = 0;

                for (var i = 0; i < d.data.length; i++) {
                    totalValorSeguro += d.data[i].planAssistancePrice;
                    totalTaxa += d.data[i].taxes;
                    totalValor += d.data[i].totalPrice;
                }

                $('#totalValorSeguro').text(ReplaceDots(totalValorSeguro.toFixed(2)));
                $('#totalTaxaAdesao').text(ReplaceDots(totalTaxa.to");
            WriteLiteral(@"Fixed(2)));
                $('#totalValorTotal').text(ReplaceDots(totalValor.toFixed(2)));

                _MaskData();
            });
    }

    $('#_CertificateIndexTable tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = datatables.row(tr);

        if (tr.hasClass('shown')) { // row.child.isShown()
            row.child.hide();
            tr.removeClass('shown');
        }
        else {
            row.child(format(row.data())).show();
            tr.addClass('shown');
            $('[data-toggle=""tooltip""]').tooltip();
        }

        _MaskData();
    });

    function _CertificateIndexDoneTyping() {
        if ($.fn.DataTable.isDataTable('#_CertificateIndexTable')) {
            datatables.search($('#_CertificateIndexSearch').val()).draw();
        }
    }
    $('#_CertificateIndexSearch').keyup(function () {
        clearTimeout(_CertificateIndexDoneTypingInterval);
        _CertificateIndexTypingTimer");
            WriteLiteral(@" = setTimeout(_CertificateIndexDoneTyping, _CertificateIndexDoneTypingInterval);
    });
    $('#_CertificateIndexSearch').keydown(function () {
        clearTimeout(_CertificateIndexDoneTyping);
    });

    function RemoveCertificate(certificateId) {
		if (confirm(""Deseja realmente excluir este certificado?"")) {
            _RemoveCertificate(certificateId, function () {
                $('#_CertificateIndexTable').DataTable().ajax.reload();
                alert(""Certificado excluído com sucesso!"");
			});
		}
	}

	function _RemoveCertificate(_certificateId, callback) {
        var d = { id: _certificateId };
		$.ajax({
			url: '");
            EndContext();
            BeginContext(29190, 46, false);
#line 655 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             Write(Url.Action("RemoveCertificate", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(29236, 248, true);
            WriteLiteral("\',\r\n\t\t\ttype: \'POST\',\r\n\t\t\tdata: d,\r\n\t\t\tdataType: \'Json\',\r\n\t\t\tsuccess: callback\r\n\t\t});\r\n    }\r\n\r\n    function Approve(certificateId) {\r\n        if (confirm(\"Deseja realmente aprovar este certificado?\")) {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(29485, 36, false);
#line 666 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 Write(Url.Action("Approve", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(29521, 693, true);
            WriteLiteral(@"',
                type: 'POST',
                data: { id: certificateId },
                dataType: 'Json',
                success: function (r) {
                    if (r) {
                        alert('Certificado aprovado com sucesso!');
                        $('#_CertificateIndexTable').DataTable().ajax.reload();
                    }
                    else {
                        alert('Houve um erro ao aprovar o certificado.');
                    }
                }
            });
        }
    }

    function Renew(certificateId) {
        if (confirm(""Deseja realmente renovar este certificado?"")) {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(30215, 34, false);
#line 686 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 Write(Url.Action("Renew", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(30249, 550, true);
            WriteLiteral(@"',
                type: 'POST',
                data: { id: certificateId },
                dataType: 'Json',
                success: function (r) {
                    alert(r.message);
                    if (!r.hasError) {
                        $('#_CertificateIndexTable').DataTable().ajax.reload();
                    }
                }
            });
        }
    }

    function Adherence(certificateId) {
        if (confirm(""Deseja realmente aderir este certificado?"")) {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(30800, 38, false);
#line 703 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 Write(Url.Action("Adherence", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(30838, 1011, true);
            WriteLiteral(@"',
                type: 'POST',
                data: { id: certificateId },
                dataType: 'Json',
                success: function (r) {
                    alert(r.message);
                    if (!r.hasError) {
                        $('#_CertificateIndexTable').DataTable().ajax.reload();
                    }
                }
            });
        }
    }

    $('#_CertificateManageRealEstateAgencyId').change(function () {
        GetRealEstates();
        GetInsurancePolicies();
    });

    $('#_CertificateIndexFilterButton').click(function(){
        datatables.ajax.reload();
    });

    function GetRealEstates() {
        if (IsNullOrWhiteSpace($('#_CertificateManageRealEstateAgencyId').val())) {
            $('#_CertificateManageRealEstateId').empty();
            $('#_CertificateManageRealEstateId').append($('<option>', { value: '' }).append('Selecione um corretora.'));
        }
        else {
            $.ajax({
                url: '");
            EndContext();
            BeginContext(31850, 59, false);
#line 733 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 Write(Url.Action("GetRealEstatesByRealEstateAgencyId", "Company"));

#line default
#line hidden
            EndContext();
            BeginContext(31909, 436, true);
            WriteLiteral(@"',
                type: 'POST',
                datatype: 'JSON',
                data: { id: $('#_CertificateManageRealEstateAgencyId').val() },
                success: function (data) {
                    $('#_CertificateManageRealEstateId').empty();
                    if (data == false || data.length == 0) {
                        $('#_CertificateManageRealEstateId').append($('<option>', { value: '' }).append('Nenhum ");
            EndContext();
            BeginContext(32346, 59, false);
#line 740 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                                                                                                           Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(32405, 1106, true);
            WriteLiteral(@" encontrado.'));
                    }
                    if (data.length > 0) {
                        $('#_CertificateManageRealEstateId').append($('<option>', { value: '' }).append('Selecione'));
                        for (var i = 0; i < data.length; i++) {
                            var companyName = IsNullOrWhiteSpace(data[i].razaoSocial) ? data[i].firstName + "" "" + data[i].lastName : data[i].razaoSocial;
                            var option = $('<option>', { value: data[i].companyId }).append(companyName);
                            $('#_CertificateManageRealEstateId').append(option);
                        }
                    }
                }
            });
        }
    }

    function GetInsurancePolicies() {
        if (IsNullOrWhiteSpace($('#_CertificateManageRealEstateAgencyId').val())) {
            $('#_CertificateManageInsurancePolicyId').empty();
            $('#_CertificateManageInsurancePolicyId').append($('<option>', { value: '' }).append('Selecione um corre");
            WriteLiteral("tora.\'));\r\n        }\r\n        else {\r\n            $.ajax({\r\n                url: \'");
            EndContext();
            BeginContext(33512, 73, false);
#line 762 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                 Write(Url.Action("GetInsurancePoliciesByRealEstateAgencyId", "InsurancePolicy"));

#line default
#line hidden
            EndContext();
            BeginContext(33585, 1151, true);
            WriteLiteral(@"',
                type: 'POST',
                datatype: 'JSON',
                data: { id: $('#_CertificateManageRealEstateAgencyId').val(), showExpired: true },
                success: function (data) {
                    $('#_CertificateManageInsurancePolicyId').empty();
                    if (data == false || data.length == 0) {
                        $('#_CertificateManageInsurancePolicyId').append($('<option>', { value: '' }).append('Nenhum produto encontrado.'));
                    }
                    if (data.length > 0) {
                        $('#_CertificateManageInsurancePolicyId').append($('<option>', { value: '' }).append('Selecione'));
                        for (var i = 0; i < data.length; i++) {
                            var option = $('<option>', { value: data[i].insurancePolicyId }).append(data[i].productName).data('ProductId', data[i].productId).data('external-code', data[i].productExternalCode);
                            $('#_CertificateManageInsurancePolicyI");
            WriteLiteral("d\').append(option);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n");
            EndContext();
#line 783 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
     if (userRealEstateAgencyId.HasValue)
    {
        

#line default
#line hidden
            BeginContext(34800, 70, true);
            WriteLiteral("\r\n        GetRealEstates();\r\n        GetInsurancePolicies();\r\n        ");
            EndContext();
#line 788 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
               
    }

#line default
#line hidden
            BeginContext(34886, 13, true);
            WriteLiteral("</script>\r\n\r\n");
            EndContext();
#line 792 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
 if (User.IsInRole("Administrator"))
{

#line default
#line hidden
            BeginContext(34940, 900, true);
            WriteLiteral(@"    <div class=""modal fade"" id=""ImportCertificateModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Importar certificados</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <input type=""file"" class=""form-control"" style=""margin-bottom: 10px;"" name=""Arquivo"" id=""Arquivo"" />
                        </div>
                        <div class=""col-md-12"">
                            ");
            EndContext();
            BeginContext(35840, 175, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c76632a8c1228b6ccbd34575a0c43a95f7cc90e98564", async() => {
                BeginContext(35945, 66, true);
                WriteLiteral("<i class=\"icon-file-text\"></i>&nbsp;Modelo (xlsx) para importação.");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(36015, 1078, true);
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <div class=""col-md-6"">
                        <button type=""button"" class=""btn btn-secondary col-md-6"" data-dismiss=""modal""><i class=""fas fa-times""></i>&nbsp;Fechar</button>
                    </div>
                    <div class=""col-md-6 text-right"">
                        <button type=""button"" class=""btn btn-primary col-md-6"" id=""importCertificateButton""><i class=""fas fa-cloud-upload-alt""></i>&nbsp;Importar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type=""text/javascript"">

    $(""#importCertificateButton"").click(function () {
        if (document.getElementById('Arquivo').files.length <= 0) {
            alert('Insira um arquivo.');
            return;
        }

        var datafile = new FormData();

        datafile.append(""Arquivo"", document.getElementById('A");
            WriteLiteral("rquivo\').files[0]);\r\n        datafile.append(\"type\", \'");
            EndContext();
            BeginContext(37094, 5, false);
#line 835 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
                            Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(37099, 43, true);
            WriteLiteral("\');\r\n\r\n        $.ajax({\r\n            url: \'");
            EndContext();
            BeginContext(37143, 49, false);
#line 838 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
             Write(Url.Action("ImportarCertificados", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(37192, 1843, true);
            WriteLiteral(@"',
            type: 'POST',
            contentType: false,
            processData: false,
            data: datafile,
            success: function (data) {

                $('#Arquivo').val('');
                if (data.temErro == false) {
                    if (data.dados.totalSaved != 0) {
                        $('#_CertificateIndexTable').DataTable().ajax.reload();
                    }
                    $('#ImportCertificateModal').modal('hide');

                    $('#totalSaved').text(data.dados.totalSaved);

                    $('#linesWithErrorList').empty();

                    if (data.dados.linesWithError.length == 0) {
                        var tr = $('<tr>');
                        tr.append($('<td>', { colspan: '2' }).append('<i>Nenhuma linha com erro.</i>'));
                    }
                    else {
                        Object.keys(data.dados.linesWithError).forEach(function (key) {
                            var tr = $('<tr>');
            ");
            WriteLiteral(@"                tr.append($('<td>', { style: 'padding: 3px;' }).append(key));
                            tr.append($('<td>', { style: 'padding: 3px;' }).append(data.dados.linesWithError[key] + '.'));
                            $('#linesWithErrorList').append(tr);
                        });
                    }
                    $('#ResultadoImportacaoModal').modal('show');

                    $('#ResultadoImportacaoTable').DataTable({
                        serverside: false,
                        ""searching"": false,
                        lengthChange: false,
                        'drawCallback': function (settings) {
                            _MaskData();
                        }
                    });
                }
            }
        });
    });

    </script>
");
            EndContext();
#line 884 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
}

#line default
#line hidden
            BeginContext(39038, 1485, true);
            WriteLiteral(@"
<div class=""modal fade"" id=""AuditLogModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""AuditLogModalTitle"">Histórico</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <table id=""AuditLogTable"" class=""table table-bordered table-striped"">
                    <thead>
                        <tr>
                            <td>Data</td>
                            <td>Usuário</td>
                            <td>Ação</td>
                            <td>Obs.</td>
                        </tr>
                    </thead>
                    <tbody id=""AuditLogModalTbody""></tbody>
                </table>
       ");
            WriteLiteral(@"     </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal""><i class=""fas fa-times""></i>&nbsp;Fechar</button>
            </div>
        </div>
    </div>
</div>
<script type=""text/javascript"">
    function OpenAuditLogModal(d){

        $('#AuditLogModal').modal('show');
        $('#AuditLogModalTitle').text('Histórico - Certificado #' + d.reference);

        $.post('");
            EndContext();
            BeginContext(40524, 40, false);
#line 920 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateIndex\Default.cshtml"
           Write(Url.Action("GetAuditLog", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(40564, 5931, true);
            WriteLiteral(@"', { certificateId: d.certificateId }, function (data) {
            if (data.length == 0) {
                $('#AuditLogModalTbody').append($('<tr>').append($('<td>', { colspan: 4 }).append($('<i>').append('Nenhum dado encontrado.'))));
                return;
            }

            $.each(data, function (i, e) {
                var tr = $('<tr>');
                var obs = '';
                if (!IsNullOrWhiteSpace(e.observation)) {
                    obs = ' (' + e.observation + ')';
                }

                tr.append($('<td>', {class: 'dateTime'}).append(e._Date));
                tr.append($('<td>').append(e.lastHandlerName));
                tr.append($('<td>').append(GetActionTypePtBR(e.actionType) + obs));
                tr.append($('<td>').append(GetDetailChanges(e.auditChangeItens)));
                $('#AuditLogModalTbody').append(tr);
            });

            $('#AuditLogTable').DataTable({
                ""order"": [[0, ""desc""]],
                serversid");
            WriteLiteral(@"e: true,
                ""searching"": false,
                lengthChange: false,
                'drawCallback': function (settings) {
                    _MaskData();
                }
            });
        });
    }

    function GetActionTypePtBR(actionType) {
        switch (actionType) {
            case ""UPDATE"":
                return ""Atualização"";
            case ""CREATE"":
                return ""Criação"";
            case ""DELETE"":
                return 'Exclusão';
            default:
                return '';
        };
    }

    function GetDetailChanges(d) {
        var uls = [];
        $.each(d, function (i, e) {
            var oldmaskClass = e.maskClass;
            var maskClass = e.maskClass;

            if (e.maskClass == ""cnpj"") //os campos que recebem cnpj/cpf são verificados pra verificar qual o dado real
            {
                if (!IsNullOrWhiteSpace(e.value))
                    maskClass = e.value.length < 14 ? ""cpf"" : e.maskClass;
   ");
            WriteLiteral(@"             if (!IsNullOrWhiteSpace(e.oldValue))
                    oldmaskClass = e.oldValue.length < 14 ? ""cpf"" : e.maskClass;
            }
            var ul = $('<ul>', { style: 'list-style-type: none; font-size: 10px; line-height: 10px;', class: 'list-group list-group-flush' });
            var li = $('<li>', { style: 'white-space:normal; padding: 5px; padding-left: 15px;', class: 'list-group-item' });
            var change = []

            change.push($('<b>').append(e.propriety + ': '));
            if (IsNullOrWhiteSpace(e.oldValue)) {
                var valueClass = '';
                if (!IsNullOrWhiteSpace(maskClass)) valueClass = maskClass;
                change.push($('<i>', { class: valueClass }).append(e.value));
            }
            else {
                var valueClass = '';
                if (!IsNullOrWhiteSpace(oldmaskClass)) valueClass = oldmaskClass;
                change.push($('<i>', { class: valueClass }).append(e.oldValue + ' '));
                change");
            WriteLiteral(@".push($('<i>', { class: 'fas fa-arrow-right' }).append(' '));
                if (IsNullOrWhiteSpace(e.value)) {
                    change.push('-');
                }
                else {
                    var valueClass = '';
                    if (!IsNullOrWhiteSpace(maskClass)) valueClass = maskClass;
                    change.push($('<i>', { class: valueClass }).append(e.value));
                }
            }

            uls.push(ul.append(li.append(change)));
        });

        return uls;
    }

    $('#AuditLogModal').on('hidden.bs.modal', function () {
        $('#AuditLogModalTbody').empty();
        $('#AuditLogTable').DataTable().destroy();
        $('#AuditLogModalTbody').empty();
    });
    $('#ResultadoImportacaoModal').on('hidden.bs.modal', function () {
        $('#ResultadoImportacaoTable').DataTable().destroy();
    });
</script>

<div class=""modal fade"" style=""overflow-y:auto;"" id=""ResultadoImportacaoModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""tr");
            WriteLiteral(@"ue"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"" style=""width: 400px; padding-bottom: 5px;"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""AuditLogModalTitle"">Resultado da Importação</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <b style=""font-size:16px;"" id=""totalSaved""></b> item(ns) importado(s) com sucesso!
                    </div>
                </div>
                <hr />
                <div class=""row"">
                    <div class=""col-md-12"">
                        Linha(s) do excel não importada(s) por erros:
                    </div>
                    <div class=""col-md-12"" style=""margin-top:.5em;"">
   ");
            WriteLiteral(@"                     <table id=""ResultadoImportacaoTable"" class=""table table-bordered table-striped"">
                            <thead>
                                <tr>
                                    <th style=""padding: 3px;"">Linha</th>
                                    <th style=""padding: 3px;"">Erro</th>
                                </tr>
                            </thead>
                            <tbody id=""linesWithErrorList""></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal""><i class=""fas fa-times""></i>&nbsp;Fechar</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int> Html { get; private set; }
    }
}
#pragma warning restore 1591
