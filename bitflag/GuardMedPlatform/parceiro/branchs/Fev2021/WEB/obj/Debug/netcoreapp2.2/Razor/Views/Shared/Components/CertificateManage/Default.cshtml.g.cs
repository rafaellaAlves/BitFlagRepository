#pragma checksum "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c8cbcf34414c3dad8b81df987c81237ccbb39e0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_CertificateManage_Default), @"mvc.1.0.view", @"/Views/Shared/Components/CertificateManage/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/Components/CertificateManage/Default.cshtml", typeof(AspNetCore.Views_Shared_Components_CertificateManage_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB;

#line default
#line hidden
#line 2 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\_ViewImports.cshtml"
using WEB.Models;

#line default
#line hidden
#line 3 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
using WEB.Utils;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0c8cbcf34414c3dad8b81df987c81237ccbb39e0", @"/Views/Shared/Components/CertificateManage/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f1a2867d427831583d00e3f9ae1a2cabe8b362bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_CertificateManage_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WEB.Models.CertificateViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString("selected"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("font-weight: bold;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "12", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("_CertificateManageForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(111, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
  

    int? certificateType = null;
    if (ViewData.ContainsKey("CertificateType") && ViewData["CertificateType"] != null)
    {
        certificateType = int.Parse(ViewData["CertificateType"].ToString());
    }

    bool isRenovation = Model.CertificateId.HasValue && (Model.VigencyDate.IsInTimeToRenovate());
    bool isSimulation = !Model.IsSimulation.HasValue || (Model.IsSimulation.HasValue && Model.IsSimulation.Value);

#line default
#line hidden
            BeginContext(554, 1927, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    _MaskData();

    //$('input').on('input', function () {
    //    this.value = this.value.toUpperCase();
    //});
</script>

<script type=""text/javascript"">
    //Fields's Id to disable when is an update.
    var disableFields = [""_CertificateManageRealEstateAgencyId"", ""_CertificateManageRealEstateId"", ""_CertificateManageInsurancePolicyId"", ""_CertificateManageProductId"", ""_CertificateManagePropertyTypeId"", ""_CertificateManageHabitationTypeId"", ""_CertificateManagePropertyTypeDescription"", ""_CertificateManagePaymentTimes"", ""_CertificateManageConstructionTypeId"", ""_CertificateManageAssistanceId""];

    var assistancePrice = 0;
    var planPrice = 0;
    var taxaInquiliniPrice = 0;
    var monthlyTotal = 0;

    function _CertificateManageSave(isSimulation) {
        //primeiro salva o plano livre se houver
        var freePlan = $('#_CertificateManagePlanId option[value=""' + $('#_CertificateManagePlanId').val() + '""]').data('free-plan');
        if (fre");
            WriteLiteral(@"ePlan) {
            if (typeof _FreePlanCoverageSavePlan == 'function') {
                //criar o plano e salvar as coberturas
                _FreePlanCoverageSavePlan(_CertificateManageSaveCertificate, isSimulation);
            }
        } else {
            var planId = $('#_CertificateManagePlanId').val();
            _CertificateManageSaveCertificate(planId, isSimulation);
        }

    }

    function _CertificateManageSaveCertificate(planId, isSimulation) {
        var freePlan = $('#_CertificateManagePlanId option[value=""' + $('#_CertificateManagePlanId').val() + '""]').data('free-plan');

        var d = $('#_CertificateManageForm').serializeArray();
        d.push({ 'name': 'PlanId', 'value': planId });
        d.push({ 'name': 'TaxaInquilini', 'value': taxaInquiliniPrice});
        d.push({ 'name': 'IsSimulation', 'value': isSimulation});

        $.post('");
            EndContext();
            BeginContext(2482, 35, false);
#line 57 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
           Write(Url.Action("Manage", "Certificate"));

#line default
#line hidden
            EndContext();
            BeginContext(2517, 3039, true);
            WriteLiteral(@"', d, function (data) {
            if (data.hasError) {
                $('#alertErrorCertificate').show();
                return;
            }
            //callBack - atualizar o plano com o certificateId e recarregar a pagina
            _CertificateManageCallBack(data.code, planId, freePlan);
	    });
    }

function _CertificateManageValidate(isSimulation) {

    var _CertificateManagehasError = false;
	$('.text-danger').remove();

    if (IsNullOrWhiteSpace($('#_CertificateManageRenterName').val())) {
        $('#_CertificateManageRenterName').after('<div class=""text-danger"">Preencha o nome do lacatário.</div>');
        _CertificateManagehasError = true;
	}

    if (IsNullOrWhiteSpace($('#_CertificateManageRenterCpf').val())) {
        $('#_CertificateManageRenterCpf').after('<div class=""text-danger"">Preencha o CPF/CNPJ do locatário.</div>');
        _CertificateManagehasError = true;
	}

    if (IsNullOrWhiteSpace($('#_CertificateManageLocatorName').val())) {
        $('#_");
            WriteLiteral(@"CertificateManageLocatorName').after('<div class=""text-danger"">Preencha o nome do lacator.</div>');
        _CertificateManagehasError = true;
    }

    if (IsNullOrWhiteSpace($('#_CertificateManageLocatorCpf').val())) {
        $('#_CertificateManageLocatorCpf').after('<div class=""text-danger"">Preencha o CPF/CNPJ do locator.</div>');
        _CertificateManagehasError = true;
    }

    if (IsNullOrWhiteSpace($('#_CertificateManagePropertyTypeId').val())) {
        $('#_CertificateManagePropertyTypeId').after('<div class=""text-danger"">Escolha um tipo de imóvel.</div>');
        _CertificateManagehasError = true;
    } else if ($('#_CertificateManagePropertyTypeId').val() == '' && IsNullOrWhiteSpace($('#_CertificateManagePropertyTypeDescription').val())) {
        $('#_CertificateManagePropertyTypeDescription').after('<div class=""text-danger"">Insira a descrição do tipo de imóvel.</div>');
        _CertificateManagehasError = true;
    }

    if (IsNullOrWhiteSpace($('#_CertificateManageInsur");
            WriteLiteral(@"ancePolicyId').val())) {
        $('#_CertificateManageInsurancePolicyId').after('<div class=""text-danger"">Escolha um produto.</div>');
        _CertificateManagehasError = true;
    } else {
        //validar plano livre
        var freePlan = $('#_CertificateManagePlanId option[value=""' + $('#_CertificateManagePlanId').val() + '""]').data('free-plan');
        if (freePlan) {
            if (typeof _FreePlanCoverageValidacao == 'function') {
                if (!_FreePlanCoverageValidacao())
                    _CertificateManagehasError = true;
            }

        }

        else if (IsNullOrWhiteSpace($('#_CertificateManagePlanId').val())) {
            $('#planArea').after('<div class=""text-danger"">Escolha um plano.</div>');
            _CertificateManagehasError = true;
        }
    }

    if (IsNullOrWhiteSpace($('#_CertificateManageRealEstateId').val())) {
        $('#_CertificateManageRealEstateId').after('<div class=""text-danger"">Escolha uma'+");
            EndContext();
            BeginContext(5557, 59, false);
#line 121 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                     Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(5616, 2871, true);
            WriteLiteral(@"+'.</div>');
        _CertificateManagehasError = true;
    }

    if (IsNullOrWhiteSpace($('#_CertificateManageEndereco').val())) {
        $('#_CertificateManageEndereco').after('<div class=""text-danger"">Preencha o endereço.</div>');
        _CertificateManagehasError = true;
    }
    if (IsNullOrWhiteSpace($('#_CertificateManageCep').val())) {
        $('#_CertificateManageCep').after('<div class=""text-danger"">Preencha o CEP.</div>');
        _CertificateManagehasError = true;
    }
    if (IsNullOrWhiteSpace($('#_CertificateManageNumero').val())) {
        $('#_CertificateManageNumero').after('<div class=""text-danger"">Preencha o número.</div>');
        _CertificateManagehasError = true;
    }
    if (IsNullOrWhiteSpace($('#_CertificateManageBairro').val())) {
        $('#_CertificateManageBairro').after('<div class=""text-danger"">Preencha o bairro.</div>');
        _CertificateManagehasError = true;
    }
    if (IsNullOrWhiteSpace($('#_CertificateManageCidade').val())) {
        $('");
            WriteLiteral(@"#_CertificateManageCidade').after('<div class=""text-danger"">Preencha a cidade.</div>');
        _CertificateManagehasError = true;
    }
    if (IsNullOrWhiteSpace($('#_CertificateManageUF').val())) {
        $('#_CertificateManageUF').after('<div class=""text-danger"">Preencha o estado.</div>');
        _CertificateManagehasError = true;
    }

    var propertyExternalCode = $('#_CertificateManagePropertyTypeId option[value=""' + $('#_CertificateManagePropertyTypeId').val() + '""]').data('external-code');
    if (propertyExternalCode == ""CASA"" && IsNullOrWhiteSpace($('#_CertificateManageConstructionTypeId').val())) {
        $('#_CertificateManageConstructionTypeId').after('<div class=""text-danger"">Escolha um tipo de construção.</div>');
        _CertificateManagehasError = true;
    }

    var productExternalCode = $('#_CertificateManageInsurancePolicyId option[value=""' + $('#_CertificateManageInsurancePolicyId').val() + '""]').data('external-code');
    if (IsNullOrWhiteSpace($('#_CertificateMana");
            WriteLiteral(@"geHabitationTypeId').val()) && productExternalCode == ""Residencial1"") {
        $('#_CertificateManageHabitationTypeId').after('<div class=""text-danger"">Escolha um tipo de habitação.</div>');
        _CertificateManagehasError = true;
    }

    if (_CertificateManagehasError) {
        $('#_CertificateManageAlertError').show();
    } else {
        $('#_CertificateManageAlertError').hide();
    }

    return (!_CertificateManagehasError);
    }

    $('#_CertificateManageButtonSubmit').click(function () {
        if (_CertificateManageValidate(false)) {
            _CertificateManageSave(false);
        }
    });

    $('#_CertificateManageSaveButtonSubmit').click(function () {
        if (_CertificateManageValidate(true)) {
            _CertificateManageSave(true);
        }
    });

");
            EndContext();
#line 183 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
 if (Model.CertificateId.HasValue && !isSimulation)
{

#line default
#line hidden
            BeginContext(8549, 141, true);
            WriteLiteral("\r\n    $(\'#_CertificateManageButtonSubmit\').text(\"Salvar\");\r\n    $(\'#_CertificateManageCardHeaderTitle\').text(\'Atualização de certificado\');\r\n");
            EndContext();
#line 188 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
       
}

#line default
#line hidden
            BeginContext(8702, 13, true);
            WriteLiteral("</script>\r\n\r\n");
            EndContext();
            BeginContext(8715, 11918, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e016340", async() => {
                BeginContext(8763, 84, true);
                WriteLiteral("\r\n    <input type=\"hidden\" id=\"_CertificateManageCertificateId\" name=\"CertificateId\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 8847, "\"", 8875, 1);
#line 193 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 8855, Model.CertificateId, 8855, 20, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(8876, 79, true);
                WriteLiteral(" />\r\n    <input type=\"hidden\" id=\"_CertificateManageReference\" name=\"Reference\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 8955, "\"", 8979, 1);
#line 194 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 8963, Model.Reference, 8963, 16, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(8980, 157, true);
                WriteLiteral(" />\r\n    <div class=\"card shadow bg-light\">\r\n        <div class=\"card-header\">Produto</div>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n");
                EndContext();
#line 199 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                 if (User.IsInRealEstate() || User.IsInRole("Corretor"))
                {

#line default
#line hidden
                BeginContext(9230, 108, true);
                WriteLiteral("                    <input type=\"hidden\" id=\"_CertificateManageRealEstateAgencyId\" name=\"RealEstateAgencyId\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 9338, "\"", 9371, 1);
#line 201 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 9346, Model.RealEstateAgencyId, 9346, 25, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9372, 5, true);
                WriteLiteral(" />\r\n");
                EndContext();
#line 202 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                }
                else
                {

#line default
#line hidden
                BeginContext(9437, 108, true);
                WriteLiteral("                    <div class=\"form-group col-md-4\">\r\n                        <label class=\"control-label\">");
                EndContext();
                BeginContext(9546, 61, false);
#line 206 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                Write(WEB.Configuration.InsuranceConfiguration.CorretoraDisplayName);

#line default
#line hidden
                EndContext();
                BeginContext(9607, 163, true);
                WriteLiteral("* </label>\r\n                        <select class=\"form-control\" id=\"_CertificateManageRealEstateAgencyId\" name=\"RealEstateAgencyId\">\r\n                            ");
                EndContext();
                BeginContext(9770, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e020109", async() => {
                    BeginContext(9787, 9, true);
                    WriteLiteral("Selecione");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9805, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 209 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                             foreach (var item in (List<DB.Models.Company>)ViewData["RealEstateAgency"])
                            {
                                var companyName = string.IsNullOrWhiteSpace(item.RazaoSocial) ? item.FirstName + " " + item.LastName : item.RazaoSocial;
                                if (item.CompanyId == Model.RealEstateAgencyId)
                                {

#line default
#line hidden
                BeginContext(10214, 36, true);
                WriteLiteral("                                    ");
                EndContext();
                BeginContext(10250, 73, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e022306", async() => {
                    BeginContext(10303, 11, false);
#line 214 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                   Write(companyName);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
#line 214 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                           WriteLiteral(item.CompanyId);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10323, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 215 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                    continue;
                                }

#line default
#line hidden
                BeginContext(10407, 32, true);
                WriteLiteral("                                ");
                EndContext();
                BeginContext(10439, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e025002", async() => {
                    BeginContext(10472, 11, false);
#line 217 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                           Write(companyName);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 217 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                   WriteLiteral(item.CompanyId);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10492, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 218 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                            }

#line default
#line hidden
                BeginContext(10525, 63, true);
                WriteLiteral("                        </select>\r\n                    </div>\r\n");
                EndContext();
#line 221 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                }

#line default
#line hidden
                BeginContext(10607, 16, true);
                WriteLiteral("                ");
                EndContext();
#line 222 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                 if (User.IsInRealEstate())
                {

#line default
#line hidden
                BeginContext(10671, 96, true);
                WriteLiteral("                    <input id=\"_CertificateManageRealEstateId\" name=\"RealEstateId\" type=\"hidden\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 10767, "\"", 10794, 1);
#line 224 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 10775, Model.RealEstateId, 10775, 19, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10795, 5, true);
                WriteLiteral(" />\r\n");
                EndContext();
#line 225 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                }
                else
                {

#line default
#line hidden
                BeginContext(10860, 108, true);
                WriteLiteral("                    <div class=\"form-group col-md-4\">\r\n                        <label class=\"control-label\">");
                EndContext();
                BeginContext(10969, 59, false);
#line 229 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
                EndContext();
                BeginContext(11028, 150, true);
                WriteLiteral("*</label>\r\n                        <select class=\"form-control\" id=\"_CertificateManageRealEstateId\" name=\"RealEstateId\">\r\n                            ");
                EndContext();
                BeginContext(11178, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e029904", async() => {
                    BeginContext(11195, 19, true);
                    WriteLiteral("Selecione uma opção");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(11223, 65, true);
                WriteLiteral("\r\n                        </select>\r\n                    </div>\r\n");
                EndContext();
#line 234 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                }

#line default
#line hidden
                BeginContext(11307, 259, true);
                WriteLiteral(@"                <div class=""form-group col-md-4"">
                    <label class=""control-label"">Produto*</label>
                    <select class=""form-control"" id=""_CertificateManageInsurancePolicyId"" name=""InsurancePolicyId"">
                        ");
                EndContext();
                BeginContext(11566, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e032029", async() => {
                    BeginContext(11583, 20, true);
                    WriteLiteral("Selecione um produto");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(11612, 93, true);
                WriteLiteral("\r\n                    </select>\r\n                </div>\r\n                <input type=\"hidden\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 11705, "\"", 11729, 1);
#line 241 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 11713, Model.ProductId, 11713, 16, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(11730, 494, true);
                WriteLiteral(@" id=""_CertificateManageProductId"" name=""ProductId"" />
            </div>
        </div>
    </div>
    <br />
    <div class=""card shadow bg-light"">
        <div class=""card-header"">Dados do Imóvel</div>
        <div class=""card-body"">
            <div class=""form-row"">
                <div class=""form-group col-md-2"">
                    <label class=""control-label"">CEP</label>
                    <input type=""text"" class=""form-control cep"" id=""_CertificateManageCep"" name=""Cep""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 12224, "\"", 12242, 1);
#line 252 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 12232, Model.Cep, 12232, 10, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(12243, 270, true);
                WriteLiteral(@" placeholder=""CEP"">
                </div>
                <div class=""form-group col-md-6"">
                    <label class=""control-label"">Endereço</label>
                    <input type=""text"" class=""form-control"" id=""_CertificateManageEndereco"" name=""Endereco""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 12513, "\"", 12536, 1);
#line 256 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 12521, Model.Endereco, 12521, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(12537, 269, true);
                WriteLiteral(@" placeholder=""Endereço"">
                </div>
                <div class=""form-group col-md-2"">
                    <label class=""control-label"">Número</label>
                    <input type=""text"" class=""form-control"" id=""_CertificateManageNumero"" name=""Numero""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 12806, "\"", 12827, 1);
#line 260 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 12814, Model.Numero, 12814, 13, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(12828, 282, true);
                WriteLiteral(@" placeholder=""Número"">
                </div>
                <div class=""form-group col-md-2"">
                    <label class=""control-label"">Complemento</label>
                    <input type=""text"" class=""form-control"" id=""_CertificateManageComplemento"" name=""Complemento""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 13110, "\"", 13136, 1);
#line 264 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 13118, Model.Complemento, 13118, 18, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(13137, 328, true);
                WriteLiteral(@" placeholder=""Complemento"">
                </div>
            </div>
            <div class=""form-row"">
                <div class=""form-group col-md-4"">
                    <label class=""control-label"">Bairro</label>
                    <input type=""text"" class=""form-control"" id=""_CertificateManageBairro"" name=""Bairro""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 13465, "\"", 13486, 1);
#line 270 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 13473, Model.Bairro, 13473, 13, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(13487, 267, true);
                WriteLiteral(@" placeholder=""Bairro"">
                </div>
                <div class=""form-group col-md-4"">
                    <label class=""control-label"">Cidade</label>
                    <input type=""text"" class=""form-control"" id=""_CertificateManageCidade"" name=""Cidade""");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 13754, "\"", 13775, 1);
#line 274 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 13762, Model.Cidade, 13762, 13, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(13776, 275, true);
                WriteLiteral(@" placeholder=""Cidade"">
                </div>
                <div class=""form-group col-md-4"">
                    <label class=""control-label"">Estado</label>
                    <select id=""_CertificateManageUF"" name=""UF"" class=""form-control"">
                        ");
                EndContext();
                BeginContext(14051, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e039221", async() => {
                    BeginContext(14068, 9, true);
                    WriteLiteral("Selecione");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14086, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 280 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                         foreach (var item in WEB.Utils.StatesUtils.GetEstados())
                        {
                            if (item.EstadoId == Model.Uf)
                            {

#line default
#line hidden
                BeginContext(14289, 32, true);
                WriteLiteral("                                ");
                EndContext();
                BeginContext(14321, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e041210", async() => {
                    BeginContext(14373, 16, false);
#line 284 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                              Write(item.Description);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
#line 284 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                       WriteLiteral(item.EstadoId);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14398, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 285 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                continue;
                            }

#line default
#line hidden
                BeginContext(14474, 28, true);
                WriteLiteral("                            ");
                EndContext();
                BeginContext(14502, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e043889", async() => {
                    BeginContext(14534, 16, false);
#line 287 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                      Write(item.Description);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 287 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                               WriteLiteral(item.EstadoId);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14559, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 288 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }

#line default
#line hidden
                BeginContext(14588, 371, true);
                WriteLiteral(@"                    </select>
                </div>
            </div>
            <div class=""form-row"">
                <div class=""form-group col-md-3"">
                    <label class=""control-label"">Tipo de imóvel*</label>
                    <select id=""_CertificateManagePropertyTypeId"" name=""PropertyTypeId"" class=""form-control"">
                        ");
                EndContext();
                BeginContext(14959, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e046743", async() => {
                    BeginContext(14976, 18, true);
                    WriteLiteral("Escolha um produto");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15003, 375, true);
                WriteLiteral(@"
                    </select>
                </div>
                <div class=""form-group col-md-3"" id=""TipoConstrucaoArea"" style=""display:none;"">
                    <label class=""control-label"">Tipo de construção*</label>
                    <select class=""form-control"" id=""_CertificateManageConstructionTypeId"" name=""ConstructionTypeId"">
                        ");
                EndContext();
                BeginContext(15378, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e048612", async() => {
                    BeginContext(15395, 9, true);
                    WriteLiteral("Selecione");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15413, 370, true);
                WriteLiteral(@"
                    </select>
                </div>
                <div class=""form-group col-md-3"" id=""HabitationTypeArea"" style=""display:none;"">
                    <label class=""control-label"">Tipo de habitação*</label>
                    <select class=""form-control"" id=""_CertificateManageHabitationTypeId"" name=""HabitationTypeId"">
                        ");
                EndContext();
                BeginContext(15783, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e050466", async() => {
                    BeginContext(15800, 9, true);
                    WriteLiteral("Selecione");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15818, 168, true);
                WriteLiteral("\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label class=\"control-label\">Referência ");
                EndContext();
                BeginContext(15987, 59, false);
#line 312 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                       Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
                EndContext();
                BeginContext(16046, 140, true);
                WriteLiteral(":</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"_CertificateManageRealEstateReference\" name=\"RealEstateReference\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 16186, "\"", 16220, 1);
#line 313 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 16194, Model.RealEstateReference, 16194, 26, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 16221, "\"", 16306, 2);
                WriteAttributeValue("", 16235, "Referência", 16235, 10, true);
#line 313 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue(" ", 16245, WEB.Configuration.InsuranceConfiguration.PartnerDisplayName, 16246, 60, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(16307, 371, true);
                WriteLiteral(@">
                </div>
                <div class=""form-group col-md-12"" id=""PropertyTypeDescriptionArea"" style=""display:none;"">
                    <label class=""control-label"">Descrição do tipo</label>
                    <textarea class=""form-control"" id=""_CertificateManagePropertyTypeDescription"" name=""PropertyTypeDescription"" placeholder=""Descrição do tipo"">");
                EndContext();
                BeginContext(16679, 29, false);
#line 317 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                                            Write(Model.PropertyTypeDescription);

#line default
#line hidden
                EndContext();
                BeginContext(16708, 1598, true);
                WriteLiteral(@"</textarea>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class=""card shadow bg-light"">
        <div class=""card-header"">Plano</div>
        <div class=""card-body"">
            <div class=""row"">
                <div class=""form-group col-md-6"">
                    <label>Planos</label>
                    <select class=""form-control"" id=""_CertificateManagePlanId""></select>
                </div>
            </div>
            <div class=""row"" id=""_CertificateManagePlanCoverageViewComponentArea"" style=""display:none;"">
                <div class=""form-group col-md-12"">
                    <div class=""form-control"" id=""_CertificateManagePlanCoverageViewComponent""></div>
                </div>
            </div>
            <div class=""row"">
                <div class=""form-group col-md-6"">
                    <label>Assistências</label>
                    <select class=""form-control"" id=""_CertificateManageAssistanceId""></select>
                 ");
                WriteLiteral(@"   <input type=""hidden"" id=""_CertificateManageAssistanceIdHidden"" name=""AssistanceId"" />
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class=""card shadow bg-light"">
        <div class=""card-header"">Forma de Pagamento</div>
        <div class=""card-body"">
            <div class=""form-row"">
                <div class=""form-group col-md-3"">
                    <label class=""control-label"">Parcelamento*</label>
                    <select class=""form-control"" id=""_CertificateManagePaymentTimes"" name=""PaymentTimes"">

");
                EndContext();
#line 355 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                         if (Model.PaymentTimes == 12)
                        {

#line default
#line hidden
                BeginContext(18389, 28, true);
                WriteLiteral("                            ");
                EndContext();
                BeginContext(18417, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e056776", async() => {
                    BeginContext(18472, 2, true);
                    WriteLiteral("12");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(18483, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 358 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }
                        else
                        {

#line default
#line hidden
                BeginContext(18569, 28, true);
                WriteLiteral("                            ");
                EndContext();
                BeginContext(18597, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e059047", async() => {
                    BeginContext(18643, 2, true);
                    WriteLiteral("12");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(18654, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 362 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }

#line default
#line hidden
                BeginContext(18683, 24, true);
                WriteLiteral("                        ");
                EndContext();
#line 363 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                         for (int i = 1; i <= 11; i++)
                        {
                            if (Model.PaymentTimes == i)
                            {

#line default
#line hidden
                BeginContext(18855, 32, true);
                WriteLiteral("                                ");
                EndContext();
                BeginContext(18887, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e061423", async() => {
                    BeginContext(18916, 1, false);
#line 367 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                       Write(i);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 367 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                   WriteLiteral(i);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(18926, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 368 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                continue;
                            }

#line default
#line hidden
                BeginContext(19002, 28, true);
                WriteLiteral("                            ");
                EndContext();
                BeginContext(19030, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c8cbcf34414c3dad8b81df987c81237ccbb39e064267", async() => {
                    BeginContext(19050, 1, false);
#line 370 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                          Write(i);

#line default
#line hidden
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#line 370 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                               WriteLiteral(i);

#line default
#line hidden
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19060, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 371 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }

#line default
#line hidden
                BeginContext(19089, 219, true);
                WriteLiteral("                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <a");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 19308, "\"", 19426, 2);
#line 379 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
WriteAttributeValue("", 19315, Url.Action("Index","Certificate"), 19315, 34, false);

#line default
#line hidden
                WriteAttributeValue("", 19349, new Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_attribute_value_writer) => {
                    PushWriter(__razor_attribute_value_writer);
#line 379 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                if(certificateType.HasValue){

#line default
#line hidden
                    BeginContext(19385, 17, true);
                    WriteLiteral("?certificateType=");
                    EndContext();
                    BeginContext(19403, 15, false);
#line 379 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                               Write(certificateType);

#line default
#line hidden
                    EndContext();
#line 379 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                           }

#line default
#line hidden
                    PopWriter();
                }
                ), 19349, 77, false);
                EndWriteAttribute();
                BeginContext(19427, 282, true);
                WriteLiteral(@" class=""btn btn-secondary float-left"" style=""color:white; line-height: 26px; width: 100px; font-size: 14px !important;""><i class=""fa fa-arrow-left""></i>&nbsp;Voltar</a>
                </div>
                <div class=""col-md-6"">
                    <div class="" float-right"">
");
                EndContext();
#line 383 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                         if (Model.IsApproved.HasValue && Model.IsApproved.Value)
                        {

#line default
#line hidden
                BeginContext(19819, 249, true);
                WriteLiteral("                            <button type=\"button\" id=\"_CertificateManageButtonSubmit\" class=\"btn btn-success\" style=\"margin-right: 20px; line-height: 26px; width: 100px; font-size: 14px !important;\"><i class=\"fa fa-check\"></i>&nbsp;Aderir</button>\r\n");
                EndContext();
#line 386 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }

#line default
#line hidden
                BeginContext(20095, 24, true);
                WriteLiteral("                        ");
                EndContext();
#line 387 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                         if (isSimulation && (!Model.IsApproved.HasValue || (Model.IsApproved.HasValue && Model.IsApproved.Value)))
                        {

#line default
#line hidden
                BeginContext(20255, 244, true);
                WriteLiteral("                            <button type=\"button\" id=\"_CertificateManageSaveButtonSubmit\" class=\"btn btn-primary\" style=\"line-height: 26px; width: 100px; font-size: 14px !important;\"><i class=\"fa fa-cloud-upload-alt\"></i>&nbsp;Salvar</button>\r\n");
                EndContext();
#line 390 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                        }

#line default
#line hidden
                BeginContext(20526, 100, true);
                WriteLiteral("                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(20633, 640, true);
            WriteLiteral(@"

<div id=""_CertificateManageAlertError"" class=""alert alert-danger fade show text-center"" role=""alert"" style=""display: none; margin-top:1em;"">
    <strong>Atenção!</strong> O Formulário contém erros.
</div>
<script type=""text/javascript"">
    $(function () {
        $(""#taxaInquiliniSlider"").slider({
            classes: {
                ""ui-slider"": ""highlight""
            },
            max: 120,
            min: 0,
            slide: function (event, ui) {
                $('#taxaInquiliniPrice').text(ui.value);
                taxaInquiliniPrice = ui.value;
                CalculateGrandTotal();
            }
");
            EndContext();
#line 414 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             if(Model.TaxaInquilini.HasValue) {

#line default
#line hidden
            BeginContext(21326, 10, true);
            WriteLiteral(", value: \'");
            EndContext();
            BeginContext(21337, 19, false);
#line 414 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                          Write(Model.TaxaInquilini);

#line default
#line hidden
            EndContext();
            BeginContext(21356, 1, true);
            WriteLiteral("\'");
            EndContext();
#line 414 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                           }

#line default
#line hidden
            BeginContext(21367, 12, true);
            WriteLiteral("            ");
            EndContext();
#line 415 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             if(!isSimulation && (Model.CertificateId.HasValue && !isRenovation) || (Model.IsApproved.HasValue && !Model.IsApproved.Value) || (Model.IsDeleted.HasValue && Model.IsDeleted.Value)) {

#line default
#line hidden
            BeginContext(21569, 16, true);
            WriteLiteral(", disabled: true");
            EndContext();
#line 415 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                                                                                                                 }

#line default
#line hidden
            BeginContext(21595, 24, true);
            WriteLiteral("        });\r\n    });\r\n\r\n");
            EndContext();
#line 419 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if(Model.TaxaInquilini.HasValue) {

#line default
#line hidden
            BeginContext(21664, 37, true);
            WriteLiteral("\r\n    $(\'#taxaInquiliniPrice\').text(\'");
            EndContext();
            BeginContext(21702, 19, false);
#line 420 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                              Write(Model.TaxaInquilini);

#line default
#line hidden
            EndContext();
            BeginContext(21721, 30, true);
            WriteLiteral("\');\r\n    taxaInquiliniPrice = ");
            EndContext();
            BeginContext(21752, 19, false);
#line 421 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                    Write(Model.TaxaInquilini);

#line default
#line hidden
            EndContext();
            BeginContext(21771, 35, true);
            WriteLiteral(";\r\n    CalculateGrandTotal();\r\n    ");
            EndContext();
#line 423 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
           }

#line default
#line hidden
            BeginContext(21816, 2378, true);
            WriteLiteral(@"
    $(""#_CertificateManageCep"").blur(function () {

        var cep = $(this).val().replace(/\D/g, '');

        $('.CEPError').remove();
        if (cep != """") {
            var validacep = /^[0-9]{8}$/;

            if (validacep.test(cep)) {

                LimparCamposEndereco();

                $.getJSON(""https://viacep.com.br/ws/"" + cep + ""/json/?callback=?"", function (dados) {
                    if (!(""erro"" in dados)) {
                        $(""#_CertificateManageEndereco"").val(dados.logradouro);
                        $(""#_CertificateManageBairro"").val(dados.bairro);
                        $(""#_CertificateManageCidade"").val(dados.localidade);
                        $(""#_CertificateManageUF"").val(dados.uf);
                    } else {
                        LimparCamposEndereco();
                        $('#_CertificateManageCep').after('<div class=""text-danger CEPError"">CEP não encontrado.</div>');
                    }
                });
            }
          ");
            WriteLiteral(@"  else {
                LimparCamposEndereco();
                $('#_CertificateManageCep').after('<div class=""text-danger CEPError"">Formato de CEP inválido.</div>');
            }
        }
        else {
            limpa_formulário_cep();
        }
    });

    function LimparCamposEndereco() {
        $(""#_CertificateManageEndereco"").val("""");
        $(""#_CertificateManageBairro"").val("""");
        $(""#_CertificateManageCidade"").val("""");
        $(""#_CertificateManageUF"").val("""");
    }

    $('#_CertificateManagePropertyTypeId').change(function () {
        if ($('#_CertificateManagePropertyTypeId').val() == '') {
            $('#PropertyTypeDescriptionArea').show();
            $('#_CertificateManagePropertyTypeDescription').val('');
        } else {
            $('#PropertyTypeDescriptionArea').hide();
            $('#_CertificateManagePropertyTypeDescription').val('');
        }


        var propertyExternalCode = $('#_CertificateManagePropertyTypeId option[value=""' + $('#_");
            WriteLiteral(@"CertificateManagePropertyTypeId').val() + '""]').data('external-code');
        if (propertyExternalCode == 'CASA') {
            $('#TipoConstrucaoArea').show();
        } else {
            $('#TipoConstrucaoArea').hide();
        }
    });

    

    function GetPropertyTypes() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(24195, 52, false);
#line 488 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             Write(Url.Action("GetPropertyTypesByProductId", "Product"));

#line default
#line hidden
            EndContext();
            BeginContext(24247, 464, true);
            WriteLiteral(@"',
            type: 'POST',
            datatype: 'JSON',
            data: { productId: $('#_CertificateManageProductId').val() },
            success: function (data) {
                $('#_CertificateManagePropertyTypeId').empty();
                $.each(data, function (i, e) {
                    var option = '<option value=""' + e.propertyTypeId + '"" data-external-code=""' + e.externalCode + '""';
                    if (data[i].propertyTypeId  == '");
            EndContext();
            BeginContext(24712, 20, false);
#line 496 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                               Write(Model.PropertyTypeId);

#line default
#line hidden
            EndContext();
            BeginContext(24732, 660, true);
            WriteLiteral(@"') {
                        option += 'selected=""selected""';

                        if(e.externalCode == 'CASA'){
                            $('#TipoConstrucaoArea').show();
                        } else {
                            $('#TipoConstrucaoArea').hide();
                        }
                    }
                    option += '>' + e.name + '</option>';
                    $('#_CertificateManagePropertyTypeId').append(option);
                });

                SetPlanPrice();
                CalculateGrandTotal();
            }
        });
    }

    function GetPlans() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(25393, 42, false);
#line 517 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             Write(Url.Action("GetPlansByProduct", "Product"));

#line default
#line hidden
            EndContext();
            BeginContext(25435, 150, true);
            WriteLiteral("\',\r\n            type: \'POST\',\r\n            datatype: \'JSON\',\r\n            data: { productId: $(\'#_CertificateManageProductId\').val(), certificateId: \'");
            EndContext();
            BeginContext(25586, 19, false);
#line 520 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                   Write(Model.CertificateId);

#line default
#line hidden
            EndContext();
            BeginContext(25605, 389, true);
            WriteLiteral(@"' },
            success: function (data) {
                $('#_CertificateManagePlanId').empty();
                var hasFreePlan = false;
                $.each(data, function (i, e) {
                    var option = '<option data-monthly-price=""' + e.monthlyPrice + '"" data-assistanceid=""' + e.assistanceId + '"" value=""' + e.planId + '""';

                    if (e.planId == '");
            EndContext();
            BeginContext(25995, 12, false);
#line 527 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                Write(Model.PlanId);

#line default
#line hidden
            EndContext();
            BeginContext(26007, 1306, true);
            WriteLiteral(@"') {
                        option += 'selected=""selected""';

                        if (e.certificateId != null) {
                            option += 'data-free-plan=""true""';
                            hasFreePlan = true;
                        }
                    }
                    else if (e.certificateId != null) {
                        option += 'data-free-plan=""true""';
                        hasFreePlan = true;
                    }

                    option += '>' + e.name + ' (R$ ' + e._PlanAssitancePrice + '/mês)</option>';
                    $('#_CertificateManagePlanId').append(option);
                });

                if (!hasFreePlan && data.length > 0) {
                    var option = '<option value="""" data-free-plan=""true"" >Plano livre</option> ';
                    $('#_CertificateManagePlanId').append(option);
                }

                LoadPlanCoverageViewComponent($('#_CertificateManagePlanId').val());
                SetPlanPrice();
");
            WriteLiteral(@"                CalculateGrandTotal();
            }
        });
    }
    function LoadPlanCoverageViewComponent(planId) {
        var _planId = planId == null ? $('#_CertificateManagePlanId').val() : planId;

        $('#_CertificateManagePlanCoverageViewComponent').load('");
            EndContext();
            BeginContext(27314, 47, false);
#line 558 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                           Write(Url.Action("FreePlanCoverageComponent", "Plan"));

#line default
#line hidden
            EndContext();
            BeginContext(27361, 22, true);
            WriteLiteral("\', { \'certificateId\': ");
            EndContext();
#line 558 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                       if(Model.CertificateId.HasValue){

#line default
#line hidden
            BeginContext(27423, 1, true);
            WriteLiteral("\'");
            EndContext();
            BeginContext(27425, 19, false);
#line 558 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                                                          Write(Model.CertificateId);

#line default
#line hidden
            EndContext();
            BeginContext(27444, 1, true);
            WriteLiteral("\'");
            EndContext();
#line 558 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                                                                                           }else{

#line default
#line hidden
            BeginContext(27464, 4, true);
            WriteLiteral("null");
            EndContext();
#line 558 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                                                                                                                                                  }

#line default
#line hidden
            BeginContext(27476, 1271, true);
            WriteLiteral(@", 'productId': $('#_CertificateManageProductId').val(), 'planId': _planId });
        $('#_CertificateManagePlanCoverageViewComponentArea').show();
    }

    $('#_CertificateManagePlanId').change(function () {

        $('#_CertificateManagePlanCoverageViewComponent').empty();
        $('#_CertificateManagePlanCoverageViewComponentArea').hide();

        LoadPlanCoverageViewComponent();

        SetPlanPrice();
        CalculateGrandTotal();
    });

    function SetPlanPrice() {
        var optionSelector = $('#_CertificateManagePlanId option[value=""' + $('#_CertificateManagePlanId').val() + '""]');
        var value = optionSelector.data('monthly-price');
        var assistanceId = optionSelector.data('assistanceid');

      
        if (value == null || value == '') planPrice = 0;
        else planPrice = value;
         
        //assitencia associada ao plano
        if (assistanceId != null) {
            $('#_CertificateManageAssistanceId').val(assistanceId).attr('disabled', '");
            WriteLiteral("disabled\');\r\n            $(\'#_CertificateManageAssistanceIdHidden\').val(assistanceId);\r\n        } else {\r\n            $(\'#_CertificateManageAssistanceId\').removeAttr(\'disabled\');\r\n        }\r\n        if (assistanceId == null && IsNullOrWhiteSpace(\'");
            EndContext();
            BeginContext(28748, 18, false);
#line 589 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                   Write(Model.AssistanceId);

#line default
#line hidden
            EndContext();
            BeginContext(28766, 280, true);
            WriteLiteral(@"')) {
            $('#_CertificateManageAssistanceIdHidden').val('');
            $('#_CertificateManageAssistanceId').val('').removeAttr('disabled');
        }

        SetAssistancePrice();
        }

    function GetAssistances() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(29047, 53, false);
#line 599 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             Write(Url.Action("GetAssistancesByProductId", "Assistance"));

#line default
#line hidden
            EndContext();
            BeginContext(29100, 876, true);
            WriteLiteral(@"',
            type: 'POST',
            datatype: 'JSON',
            data: { productId: $('#_CertificateManageProductId').val() },
            success: function (data) {
                $('#_CertificateManageAssistanceId').empty();
                if (data == false || data.length == 0) {
                    $('#_CertificateManageAssistanceId').append($('<option>', { value: '' }).append('Nenhuma assistência encontrada.'));
                }
                if (data.length > 0) {
                    $('#_CertificateManageAssistanceId').append($('<option>', { value: '' }).append('Selecione um assistência'));
                    for (var i = 0; i < data.length; i++) {
                        var option = $('<option>', { value: data[i].assistanceId }).append(data[i].name).data('value', data[i].value);
                        if (data[i].assistanceId == '");
            EndContext();
            BeginContext(29977, 18, false);
#line 612 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                Write(Model.AssistanceId);

#line default
#line hidden
            EndContext();
            BeginContext(29995, 3513, true);
            WriteLiteral(@"') {
                            option.attr('selected', 'selected');
                            assistancePrice = data[i].value;
                            CalculateGrandTotal();
                        }
                        $('#_CertificateManageAssistanceId').append(option);
                    }
                }
                $('#_CertificateManageAssistanceIdHidden').val($('#_CertificateManageAssistanceId').val());
            }
        });
    }
    $('#_CertificateManageAssistanceId').change(function () {

        $('#_CertificateManageAssistanceIdHidden').val($('#_CertificateManageAssistanceId').val());

        SetAssistancePrice();
        CalculateGrandTotal();
    });

    function SetAssistancePrice() {
        var value = $('#_CertificateManageAssistanceId option[value=""' + $('#_CertificateManageAssistanceId').val() + '""]').data('value');
        if (value == null || value == '') assistancePrice = 0;
        else assistancePrice = value;
    }

    function _Ce");
            WriteLiteral(@"rtificateManageGetFreePlanPrice(freePlanPrice) {
        planPrice = freePlanPrice;
        var freePlanSelector = $('#_CertificateManagePlanId option[data-free-plan=""true""]');
        if (freePlanSelector != null)
            freePlanSelector.text('Plano Livre (R$ ' + $('.money').masked(freePlanPrice.toFixed(2)) + '/mês)');
        CalculateGrandTotal();
    }

    function CalculateGrandTotal() {
        var _planPrice = (planPrice == null ? 0 : planPrice) + (assistancePrice == null ? 0 : assistancePrice);

        monthlyTotal = _planPrice + taxaInquiliniPrice / 12;

        var annualTotal = (((Math.round(_planPrice * 100)/100) * 12) + taxaInquiliniPrice).toFixed(2);
        var _monthlyTotal = monthlyTotal.toFixed(2);

        var _annualTotal = ReplaceDots(annualTotal);
        _monthlyTotal = ReplaceDots(_monthlyTotal);

        $('#valorMensalSeguro').text(ReplaceDots(_planPrice.toFixed(2)));
        $('#valorTotalMensal').text(_monthlyTotal);
        $('#valorTotalAnual').text(_a");
            WriteLiteral(@"nnualTotal);
        


        $('#_CertificateManagePaymentTimes option[value=""12""]').text('Mensais de R$ ' + ReplaceDots(monthlyTotal.toFixed(2)));
        for (var i = 11; i > 0; i--) {
            var value = ((annualTotal) / i);
            value = ReplaceDots(value.toFixed(2));
                $('#_CertificateManagePaymentTimes option[value=""' + i + '""]').text(i + 'x de R$ ' + value);
        }

        return { MonthlyTotal: _monthlyTotal, AnnualTotal: _annualTotal};
    }

    function CleanPrices() {
        assistancePrice = 0;
        planPrice = 0;
        
        monthlyTotal = 0;

        CalculateGrandTotal();
    }

    $('#_CertificateManagePaymentTimes').change(function () {
        CalculateGrandTotal();
    });

    $('#_CertificateManageRealEstateAgencyId').change(function () {
        $('#_CertificateManageProductId').val('');
        $('#_CertificateManagePlanId').empty();
        CleanPrices();
        //limpar component de plano livre
        $('#_Cer");
            WriteLiteral(@"tificateManagePlanCoverageViewComponent').empty();
        $('#_CertificateManagePlanCoverageViewComponentArea').hide();

        $('#PropertyTypeDescriptionArea').hide();
        $('#_CertificateManagePropertyTypeDescription').val('');
        $('#_CertificateManagePropertyTypeId').empty();

        GetRealEstates();
        GetInsurancePolicies();
    });

    function GetRealEstates() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(33509, 59, false);
#line 704 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             Write(Url.Action("GetRealEstatesByRealEstateAgencyId", "Company"));

#line default
#line hidden
            EndContext();
            BeginContext(33568, 411, true);
            WriteLiteral(@"',
            type: 'POST',
            datatype: 'JSON',
            data: { id: $('#_CertificateManageRealEstateAgencyId').val() },
            success: function (data) {
                $('#_CertificateManageRealEstateId').empty();
                if (data == false || data.length == 0) {
                    $('#_CertificateManageRealEstateId').append($('<option>', { value: '' }).append('Nenhuma '+");
            EndContext();
            BeginContext(33980, 59, false);
#line 711 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                          Write(WEB.Configuration.InsuranceConfiguration.PartnerDisplayName);

#line default
#line hidden
            EndContext();
            BeginContext(34039, 560, true);
            WriteLiteral(@"+' encontrada.'));
                }
                if (data.length > 0) {
                    $('#_CertificateManageRealEstateId').append($('<option>', { value: '' }).append('Selecione'));
                    for (var i = 0; i < data.length; i++) {
                        var companyName = IsNullOrWhiteSpace(data[i].razaoSocial) ? data[i].firstName + "" "" + data[i].lastName : data[i].razaoSocial;
                        var option = $('<option>', { value: data[i].companyId }).append(companyName);
                        if (data[i].companyId == '");
            EndContext();
            BeginContext(34600, 18, false);
#line 718 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                             Write(Model.RealEstateId);

#line default
#line hidden
            EndContext();
            BeginContext(34618, 331, true);
            WriteLiteral(@"') {
                            option.attr('selected', 'selected');
                        }
                        $('#_CertificateManageRealEstateId').append(option);
                    }
                }
            }
        });
    }

    function GetInsurancePolicies() {
        $.ajax({
            url: '");
            EndContext();
            BeginContext(34950, 73, false);
#line 730 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
             Write(Url.Action("GetInsurancePoliciesByRealEstateAgencyId", "InsurancePolicy"));

#line default
#line hidden
            EndContext();
            BeginContext(35023, 154, true);
            WriteLiteral("\',\r\n            type: \'POST\',\r\n            datatype: \'JSON\',\r\n            data: {\r\n                id: $(\'#_CertificateManageRealEstateAgencyId\').val(),\r\n");
            EndContext();
#line 735 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                 if (Model.CertificateId.HasValue && !isSimulation)
                {
                    

#line default
#line hidden
            BeginContext(35291, 61, true);
            WriteLiteral("\r\n                    showExpired: true\r\n                    ");
            EndContext();
#line 739 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                           
                }
                else
                {
                    

#line default
#line hidden
            BeginContext(35447, 62, true);
            WriteLiteral("\r\n                    showExpired: false\r\n                    ");
            EndContext();
#line 745 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                           
                }

#line default
#line hidden
            BeginContext(35537, 827, true);
            WriteLiteral(@"            },
            success: function (data) {
                $('#_CertificateManageInsurancePolicyId').empty();
                if (data == false || data.length == 0) {
                    $('#_CertificateManageInsurancePolicyId').append($('<option>', { value: '' }).append('Nenhuma apólice encontrada.'));
                }
                if (data.length > 0) {
                    $('#_CertificateManageInsurancePolicyId').append($('<option>', { value: '' }).append('Selecione'));
                    for (var i = 0; i < data.length; i++) {
                        var option = $('<option>', { value: data[i].insurancePolicyId }).append(data[i].productName).data('ProductId', data[i].productId).data('external-code', data[i].productExternalCode);
                        if (data[i].insurancePolicyId == '");
            EndContext();
            BeginContext(36365, 23, false);
#line 757 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                     Write(Model.InsurancePolicyId);

#line default
#line hidden
            EndContext();
            BeginContext(36388, 731, true);
            WriteLiteral(@"') {
                            $('#_CertificateManageProductId').val(data[i].productId);
                            option.attr('selected', 'selected');

                            assistancePrice = 0;
                            planPrice = 0;
                            GetPlans();
                            GetAssistances();
                            GetPropertyTypes();
                            UpdateHabitationTypeArea();
                        }
                        $('#_CertificateManageInsurancePolicyId').append(option);
                    }
                }
                UpdateHabitationTypeArea();
                HideConstructionTypeArea(false);
            }
        });
    }
");
            EndContext();
#line 776 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if (Model.RealEstateAgencyId.HasValue)
    {
        

#line default
#line hidden
            BeginContext(37185, 62, true);
            WriteLiteral("\r\n    GetRealEstates();\r\n    GetInsurancePolicies();\r\n        ");
            EndContext();
#line 781 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               
    }

#line default
#line hidden
            BeginContext(37263, 1080, true);
            WriteLiteral(@"
    $('#_CertificateManageInsurancePolicyId').change(function () {
        var productId = $('#_CertificateManageInsurancePolicyId option[value=""' + $('#_CertificateManageInsurancePolicyId').val() + '""]').data('ProductId');
        $('#_CertificateManageProductId').val(productId);

        assistancePrice = 0;
        planPrice = 0;
        GetPlans();
        GetAssistances();
        GetPropertyTypes();
        UpdateHabitationTypeArea();
        HideConstructionTypeArea(true);
    });

    function UpdateHabitationTypeArea() {
        var productExternalCode = $('#_CertificateManageInsurancePolicyId option[value=""' + $('#_CertificateManageInsurancePolicyId').val() + '""]').data('external-code');
        if (productExternalCode == ""Residencial1"") {
            $('#HabitationTypeArea').show();
        } else {
            $('#HabitationTypeArea').hide();
        }
    }

    function HideConstructionTypeArea(clear) {
        if(clear) $('#_CertificateManageConstructionTypeId').val('')");
            WriteLiteral(";\r\n        $(\'#TipoConstrucaoArea\').hide();\r\n    }\r\n\r\n\r\n");
            EndContext();
#line 812 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if ((Model.IsDeleted.HasValue && Model.IsDeleted.Value || Model.IsApproved.HasValue && !Model.IsApproved.Value)) {
        

#line default
#line hidden
            BeginContext(38478, 356, true);
            WriteLiteral(@"
    function LockScreen() {
        $('input').attr('disabled', 'disabled').attr('name', '');
        $('select').attr('disabled', 'disabled').attr('name', '');
        $('textarea').attr('disabled', 'disabled').attr('name', '');
    };
    LockScreen();

    if (typeof _CertificateManageIsLocked === 'function') {

        var message= """";

");
            EndContext();
#line 825 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if ((Model.IsApproved.HasValue && !Model.IsApproved.Value)) {

#line default
#line hidden
            BeginContext(38906, 113, true);
            WriteLiteral("\r\n        message = \"Não é possível editar este certificado, pois ele precisa passar por uma análise.\";\r\n        ");
            EndContext();
#line 827 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               }

#line default
#line hidden
            BeginContext(39029, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 829 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if ((Model.IsDeleted.HasValue && Model.IsDeleted.Value)) {

#line default
#line hidden
            BeginContext(39100, 87, true);
            WriteLiteral("\r\n        message = \"Não é possível editar este certificado, pois ele foi excluído por ");
            EndContext();
            BeginContext(39188, 19, false);
#line 830 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                Write(Model.NameDeletedBy);

#line default
#line hidden
            EndContext();
            BeginContext(39207, 4, true);
            WriteLiteral(" em ");
            EndContext();
            BeginContext(39212, 18, false);
#line 830 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
                                                                                                        Write(Model._DeletedDate);

#line default
#line hidden
            EndContext();
            BeginContext(39230, 14, true);
            WriteLiteral(" .\";\r\n        ");
            EndContext();
#line 831 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               }

#line default
#line hidden
            BeginContext(39254, 69, true);
            WriteLiteral("        _CertificateManageIsLocked(message);\r\n            }\r\n        ");
            EndContext();
#line 834 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               
    }

#line default
#line hidden
            BeginContext(39339, 72, true);
            WriteLiteral("\r\n    //se for atualização e não for de renovação ou não for simulação\r\n");
            EndContext();
#line 838 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if (Model.CertificateId.HasValue && !isRenovation && !isSimulation)
    {
        

#line default
#line hidden
            BeginContext(39506, 177, true);
            WriteLiteral("\r\n            for (var i = 0; i < disableFields.length; i++) {\r\n                $(\'#\' + disableFields[i]).attr(\'disabled\', \'disabled\').attr(\'name\', \'\');\r\n            }\r\n        ");
            EndContext();
#line 844 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               
    }

#line default
#line hidden
            BeginContext(39699, 64, true);
            WriteLiteral("\r\n    //for renovação e não estiver cancelado ou para aporovar\r\n");
            EndContext();
#line 848 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
     if (isRenovation && !(Model.IsDeleted.HasValue && Model.IsDeleted.Value || Model.IsApproved.HasValue && !Model.IsApproved.Value))
    {
        

#line default
#line hidden
            BeginContext(39920, 135, true);
            WriteLiteral("\r\n        _CertificateManageShowWarningBox(\'Este é um certificado de renovação, então todos os campos podem ser alterados.\');\r\n        ");
            EndContext();
#line 852 "C:\repositorios\bitflag\GuardMedPlatform\parceiro\branchs\Fev2021\WEB\Views\Shared\Components\CertificateManage\Default.cshtml"
               
    }

#line default
#line hidden
            BeginContext(40071, 784, true);
            WriteLiteral(@"
    $('#_CertificateManageRenterCpf').keyup(function () {
        CPFChangeMask('_CertificateManageRenterCpf');
    });
    $('#_CertificateManageLocatorCpf').keyup(function () {
        CPFChangeMask('_CertificateManageLocatorCpf');
    });

    function CPFChangeMask(selectorId) {
        if ($('#' + selectorId).val().length > 14 && $('#' + selectorId).hasClass(""_cpf"")) {
            $('#' + selectorId).removeClass(""_cpf"").addClass(""cnpj"");
        } else if ($('#' + selectorId).val().length <= 14 && $('#' + selectorId).hasClass(""cnpj"")) {
            $('#' + selectorId).removeClass(""cnpj"").addClass(""_cpf"");
        }
        _MaskData();
    }
    CPFChangeMask('_CertificateManageRenterCpf');
    CPFChangeMask('_CertificateManageLocatorCpf');
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public DB.Models.Insurance_HomologContext context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WEB.Models.CertificateViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
